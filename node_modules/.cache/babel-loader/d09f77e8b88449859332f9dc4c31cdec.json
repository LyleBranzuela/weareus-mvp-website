{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\School Stuff\\\\Year 3\\\\Research and Development Part 2\\\\weareus-mvp-website\\\\src\\\\components\\\\for-profile-components\\\\ExpendableText.js\";\nimport React from \"react\";\nimport \"./ExpendableText.css\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport icon_accordion_arrow_purple from \"../../assets/icons/accordion_arrow_purple.svg\";\nconst MAX_POSSIBLE_HEIGHT = 500;\n\nconst ExpendableText = ({\n  maxHeight,\n  children\n}) => {\n  const ref = useRef();\n  const [shouldShowExpand, setShouldShowExpand] = useState(false);\n  const [expanded, setExpanded] = useState(true); // Listen for any changes on the text/maxheight\n\n  useEffect(() => {\n    if (ref.current.scrollHeight > maxHeight) {\n      setShouldShowExpand(true);\n      setExpanded(false);\n    }\n  }, [maxHeight, children]);\n  return /*#__PURE__*/React.createElement(Card.Text, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"inner\",\n    style: {\n      maxHeight: expanded ? MAX_POSSIBLE_HEIGHT : maxHeight\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, children), shouldShowExpand && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setExpanded(!expanded);\n    },\n    className: \"read-more-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Read More\", \" \", /*#__PURE__*/React.createElement(\"img\", {\n    src: icon_accordion_arrow_purple,\n    className: \"read-more-arrow\",\n    alt: \"read-more-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ExpendableText;","map":{"version":3,"sources":["C:/Users/admin/Downloads/School Stuff/Year 3/Research and Development Part 2/weareus-mvp-website/src/components/for-profile-components/ExpendableText.js"],"names":["React","useRef","useEffect","useState","Card","MAX_POSSIBLE_HEIGHT","ExpendableText","maxHeight","children","ref","shouldShowExpand","setShouldShowExpand","expanded","setExpanded","current","scrollHeight","icon_accordion_arrow_purple"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAGA,MAAMC,mBAAmB,GAAG,GAA5B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAClD,QAAMC,GAAG,GAAGR,MAAM,EAAlB;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC,CAHkD,CAKlD;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,GAAG,CAACK,OAAJ,CAAYC,YAAZ,GAA2BR,SAA/B,EAA0C;AACxCI,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAE,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GALQ,EAKN,CAACN,SAAD,EAAYC,QAAZ,CALM,CAAT;AAOA,sBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAEC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,KAAK,EAAE;AAAEF,MAAAA,SAAS,EAAEK,QAAQ,GAAGP,mBAAH,GAAyBE;AAA9C,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGC,QAJH,CADF,EAOGE,gBAAgB,iBACf;AACE,IAAA,OAAO,EAAE,MAAM;AACbG,MAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,KAHH;AAIE,IAAA,SAAS,EAAC,kBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMY,GANZ,eAOE;AACE,IAAA,GAAG,EAAEI,2BADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,GAAG,EAAC,iBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CARJ,CADF;AAyBD,CAtCD;;AAwCA,eAAeV,cAAf","sourcesContent":["import React from \"react\";\r\nimport \"./ExpendableText.css\";\r\nimport { useRef, useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport icon_accordion_arrow_purple from \"../../assets/icons/accordion_arrow_purple.svg\";\r\n\r\nconst MAX_POSSIBLE_HEIGHT = 500;\r\n\r\nconst ExpendableText = ({ maxHeight, children }) => {\r\n  const ref = useRef();\r\n  const [shouldShowExpand, setShouldShowExpand] = useState(false);\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  // Listen for any changes on the text/maxheight\r\n  useEffect(() => {\r\n    if (ref.current.scrollHeight > maxHeight) {\r\n      setShouldShowExpand(true);\r\n      setExpanded(false);\r\n    }\r\n  }, [maxHeight, children]);\r\n\r\n  return (\r\n    <Card.Text ref={ref}>\r\n      <span\r\n        className=\"inner\"\r\n        style={{ maxHeight: expanded ? MAX_POSSIBLE_HEIGHT : maxHeight }}\r\n      >\r\n        {children}\r\n      </span>\r\n      {shouldShowExpand && (\r\n        <button\r\n          onClick={() => {\r\n            setExpanded(!expanded);\r\n          }}\r\n          className=\"read-more-button\"\r\n        >\r\n          Read More{\" \"}\r\n          <img\r\n            src={icon_accordion_arrow_purple}\r\n            className=\"read-more-arrow\"\r\n            alt=\"read-more-arrow\"\r\n          ></img>\r\n        </button>\r\n      )}\r\n    </Card.Text>\r\n  );\r\n};\r\n\r\nexport default ExpendableText;\r\n"]},"metadata":{},"sourceType":"module"}