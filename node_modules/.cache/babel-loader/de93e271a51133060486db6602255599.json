{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\School Stuff\\\\Year 3\\\\Research and Development Part 2\\\\weareus-mvp-website\\\\src\\\\components\\\\register-login-components\\\\UserRegister.js\";\nimport \"./UserRegister.css\";\nimport React from \"react\";\nimport { Container, Form, Row, Col } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CustomButton from \"../general-components/CustomButton\";\nimport UserPool from \"../../manage-accounts/UserPool\";\nimport { AccountVerificationModal, getUser } from \"../../manage-accounts/Accounts\";\nimport { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\nimport swal from \"@sweetalert/with-react\";\nimport AWS from \"aws-sdk\";\nimport api from \"../../api/api\";\n\nclass UserRegister extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formOnChangeHandler = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.password === this.state.confirmPassword) {\n        let userObject = {\n          first_name: this.state.firstName,\n          last_name: this.state.lastName,\n          user_name: this.state.username,\n          email: this.state.email,\n          phone: this.state.phoneNumber,\n          user_type: \"user\"\n        }; // Create Data Variables with key-value pairing\n\n        let dataFirstName = {\n          Name: \"given_name\",\n          Value: userObject.first_name\n        };\n        let dataLastName = {\n          Name: \"family_name\",\n          Value: userObject.last_name\n        };\n        let dataEmail = {\n          Name: \"email\",\n          Value: userObject.email\n        };\n        let dataPhoneNumber = {\n          Name: \"phone_number\",\n          Value: \"+64\" + userObject.phone\n        };\n        let dataUsername = {\n          Name: \"preferred_username\",\n          Value: userObject.user_name\n        }; // Create the Attributes List of CognitoUserAttributes\n\n        var attributeGivenName = new CognitoUserAttribute(dataFirstName);\n        var attributeFamilyName = new CognitoUserAttribute(dataLastName);\n        var attributeEmail = new CognitoUserAttribute(dataEmail);\n        var attributePhoneNumber = new CognitoUserAttribute(dataPhoneNumber);\n        var attributePreferredUsername = new CognitoUserAttribute(dataUsername); // Push the new CognitoUserAttributes to the Attributes List\n\n        var attributeList = [];\n        attributeList.push(attributeGivenName);\n        attributeList.push(attributeFamilyName);\n        attributeList.push(attributeEmail);\n        attributeList.push(attributePhoneNumber);\n        attributeList.push(attributePreferredUsername); // Signup the Account\n\n        UserPool.signUp(userObject.email, this.state.password, attributeList, null, async (err, data) => {\n          if (err) {\n            if (err.code === \"UsernameExistsException\") {\n              // Error with Signing up\n              swal({\n                title: \"User Already Exists!\",\n                text: \"Would you like to login instead?\",\n                icon: \"error\",\n                buttons: [\"No\", \"Login\"]\n              }).then(value => {\n                if (value === true) {\n                  this.setState({\n                    redirect: true\n                  });\n                }\n              });\n            } else {\n              // Error with Signing up\n              swal({\n                title: \"Registration Unsuccessful!\",\n                text: err.message,\n                icon: \"error\",\n                buttons: [false, true]\n              });\n            }\n          } else {\n            // If there's a duplicate data in the database, then remove the cognito user\n            let duplicateUserFlag = false;\n\n            try {\n              userObject.reference_id = data.userSub;\n              await api.post(\"/user\", userObject);\n            } catch (error) {\n              duplicateUserFlag = true;\n              const cognitoidentityserviceprovider = new AWS.CognitoIdentityServiceProvider({\n                accessKeyId: \"AKIA2DSPNNEEZ3CSSBAF\",\n                secretAccessKey: \"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\",\n                region: \"ap-southeast-2\"\n              });\n              const params = {\n                UserPoolId: data.user.pool.userPoolId,\n                Username: data.user.username\n              };\n              cognitoidentityserviceprovider.adminDeleteUser(params, (err, data) => {\n                if (err) {\n                  swal({\n                    title: \"Account Cleanup Error\",\n                    text: \"Something went wrong with the account cleanup\",\n                    icon: \"error\",\n                    buttons: [false, true]\n                  });\n                } else {\n                  var _error$response;\n\n                  swal({\n                    title: \"Database Error!\",\n                    text: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"Unknown Error\",\n                    icon: \"error\",\n                    buttons: [false, true]\n                  });\n                }\n              });\n            } // No Duplicates in the Database\n\n\n            if (!duplicateUserFlag) {\n              // Put the Reference ID (Generated by Cognito into the User Object)\n              swal({\n                title: \"Registration Successful!\",\n                text: \"You are now Registered!\",\n                icon: \"success\",\n                buttons: [false, true]\n              }).then(value => {\n                if (value === true) {\n                  // Account Verification Modal\n                  AccountVerificationModal(getUser(userObject.email.toLowerCase()));\n                  this.setState({\n                    redirect: true\n                  });\n                }\n              });\n            }\n          }\n        });\n      } else {\n        swal({\n          title: \"Incorrect Passwords!\",\n          text: \"Incorrect username or password.\",\n          icon: \"error\",\n          buttons: [false, true]\n        });\n      }\n    };\n\n    this.state = {\n      firstName: \"\",\n      // Shown as given_name for AWS Cognito\n      lastName: \"\",\n      // Shown as family_name for AWS Cognito\n      email: \"\",\n      phoneNumber: \"\",\n      username: \"\",\n      // Shown as preferred_username for AWS Cognito\n      password: \"\",\n      confirmPassword: \"\",\n      redirect: false\n    }; // Prevents Memory Leaks\n\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setState({\n      redirect: false\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  } // Handles Any Active Changes on the Form\n\n\n  render() {\n    // Redirect to home if finished registering\n    if (this.state.redirect) {\n      if (this.props.isLoggedIn) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"home\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 16\n          }\n        });\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"userRegisterFormStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      id: \"userRegisterForm\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, \"Register as User\"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }, \"First Name*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: this.state.firstName,\n      onChange: this.formOnChangeHandler,\n      type: \"text\",\n      placeholder: \"First Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 19\n      }\n    }, \"Last Name*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: this.state.lastName,\n      onChange: this.formOnChangeHandler,\n      type: \"text\",\n      placeholder: \"Last Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    }, \"Email Address*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: this.state.email,\n      onChange: this.formOnChangeHandler,\n      type: \"text\",\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"phoneNumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 19\n      }\n    }, \"Phone Number*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: this.state.phoneNumber,\n      onChange: this.formOnChangeHandler,\n      type: \"number\",\n      placeholder: \"Phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 19\n      }\n    }, \"Account Username*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: this.state.username,\n      onChange: this.formOnChangeHandler,\n      type: \"text\",\n      placeholder: \"Your Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }\n    }, \"Create Account Password*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: this.state.password,\n      onChange: this.formOnChangeHandler,\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 19\n      }\n    }, \"Password should be at least 6 characters, have a number, an uppercase and a lower case letter.\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 19\n      }\n    }, \"Confirm Password*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      onChange: this.formOnChangeHandler,\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      id: \"registerUserButton\",\n      type: \"submit\",\n      text: \"Register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.userReducer.isLoggedIn\n});\n\nconst mapDispatchToProps = () => {};\n\nexport default connect(mapStateToProps, mapDispatchToProps())(UserRegister);","map":{"version":3,"sources":["C:/Users/admin/Downloads/School Stuff/Year 3/Research and Development Part 2/weareus-mvp-website/src/components/register-login-components/UserRegister.js"],"names":["React","Container","Form","Row","Col","Redirect","connect","CustomButton","UserPool","AccountVerificationModal","getUser","CognitoUserAttribute","swal","AWS","api","UserRegister","Component","constructor","props","formOnChangeHandler","e","setState","target","id","value","onSubmit","event","preventDefault","state","password","confirmPassword","userObject","first_name","firstName","last_name","lastName","user_name","username","email","phone","phoneNumber","user_type","dataFirstName","Name","Value","dataLastName","dataEmail","dataPhoneNumber","dataUsername","attributeGivenName","attributeFamilyName","attributeEmail","attributePhoneNumber","attributePreferredUsername","attributeList","push","signUp","err","data","code","title","text","icon","buttons","then","redirect","message","duplicateUserFlag","reference_id","userSub","post","error","cognitoidentityserviceprovider","CognitoIdentityServiceProvider","accessKeyId","secretAccessKey","region","params","UserPoolId","user","pool","userPoolId","Username","adminDeleteUser","response","toLowerCase","_isMounted","componentDidMount","componentWillUnmount","render","isLoggedIn","mapStateToProps","userReducer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import \"./UserRegister.css\";\r\nimport React from \"react\";\r\nimport { Container, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomButton from \"../general-components/CustomButton\";\r\nimport UserPool from \"../../manage-accounts/UserPool\";\r\nimport {\r\n  AccountVerificationModal,\r\n  getUser,\r\n} from \"../../manage-accounts/Accounts\";\r\nimport { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\r\nimport swal from \"@sweetalert/with-react\";\r\nimport AWS from \"aws-sdk\";\r\nimport api from \"../../api/api\";\r\n\r\nclass UserRegister extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\", // Shown as given_name for AWS Cognito\r\n      lastName: \"\", // Shown as family_name for AWS Cognito\r\n      email: \"\",\r\n      phoneNumber: \"\",\r\n      username: \"\", // Shown as preferred_username for AWS Cognito\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      redirect: false,\r\n    };\r\n\r\n    // Prevents Memory Leaks\r\n    this._isMounted = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.setState({ redirect: false });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  // Handles Any Active Changes on the Form\r\n  formOnChangeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Function to Submit Register Form (Email, Password, First and Last name, Phone Number, Preferred Username)\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.password === this.state.confirmPassword) {\r\n      let userObject = {\r\n        first_name: this.state.firstName,\r\n        last_name: this.state.lastName,\r\n        user_name: this.state.username,\r\n        email: this.state.email,\r\n        phone: this.state.phoneNumber,\r\n        user_type: \"user\",\r\n      };\r\n\r\n      // Create Data Variables with key-value pairing\r\n      let dataFirstName = {\r\n        Name: \"given_name\",\r\n        Value: userObject.first_name,\r\n      };\r\n      let dataLastName = {\r\n        Name: \"family_name\",\r\n        Value: userObject.last_name,\r\n      };\r\n      let dataEmail = {\r\n        Name: \"email\",\r\n        Value: userObject.email,\r\n      };\r\n      let dataPhoneNumber = {\r\n        Name: \"phone_number\",\r\n        Value: \"+64\" + userObject.phone,\r\n      };\r\n      let dataUsername = {\r\n        Name: \"preferred_username\",\r\n        Value: userObject.user_name,\r\n      };\r\n\r\n      // Create the Attributes List of CognitoUserAttributes\r\n      var attributeGivenName = new CognitoUserAttribute(dataFirstName);\r\n      var attributeFamilyName = new CognitoUserAttribute(dataLastName);\r\n      var attributeEmail = new CognitoUserAttribute(dataEmail);\r\n      var attributePhoneNumber = new CognitoUserAttribute(dataPhoneNumber);\r\n      var attributePreferredUsername = new CognitoUserAttribute(dataUsername);\r\n\r\n      // Push the new CognitoUserAttributes to the Attributes List\r\n      var attributeList = [];\r\n      attributeList.push(attributeGivenName);\r\n      attributeList.push(attributeFamilyName);\r\n      attributeList.push(attributeEmail);\r\n      attributeList.push(attributePhoneNumber);\r\n      attributeList.push(attributePreferredUsername);\r\n\r\n      // Signup the Account\r\n      UserPool.signUp(\r\n        userObject.email,\r\n        this.state.password,\r\n        attributeList,\r\n        null,\r\n        async (err, data) => {\r\n          if (err) {\r\n            if (err.code === \"UsernameExistsException\") {\r\n              // Error with Signing up\r\n              swal({\r\n                title: \"User Already Exists!\",\r\n                text: \"Would you like to login instead?\",\r\n                icon: \"error\",\r\n                buttons: [\"No\", \"Login\"],\r\n              }).then((value) => {\r\n                if (value === true) {\r\n                  this.setState({ redirect: true });\r\n                }\r\n              });\r\n            } else {\r\n              // Error with Signing up\r\n              swal({\r\n                title: \"Registration Unsuccessful!\",\r\n                text: err.message,\r\n                icon: \"error\",\r\n                buttons: [false, true],\r\n              });\r\n            }\r\n          } else {\r\n            // If there's a duplicate data in the database, then remove the cognito user\r\n            let duplicateUserFlag = false;\r\n            try {\r\n              userObject.reference_id = data.userSub;\r\n              await api.post(\"/user\", userObject);\r\n            } catch (error) {\r\n              duplicateUserFlag = true;\r\n              const cognitoidentityserviceprovider = new AWS.CognitoIdentityServiceProvider(\r\n                {\r\n                  accessKeyId: \"AKIA2DSPNNEEZ3CSSBAF\",\r\n                  secretAccessKey: \"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\",\r\n                  region: \"ap-southeast-2\",\r\n                }\r\n              );\r\n              const params = {\r\n                UserPoolId: data.user.pool.userPoolId,\r\n                Username: data.user.username,\r\n              };\r\n              cognitoidentityserviceprovider.adminDeleteUser(\r\n                params,\r\n                (err, data) => {\r\n                  if (err) {\r\n                    swal({\r\n                      title: \"Account Cleanup Error\",\r\n                      text: \"Something went wrong with the account cleanup\",\r\n                      icon: \"error\",\r\n                      buttons: [false, true],\r\n                    });\r\n                  } else {\r\n                    swal({\r\n                      title: \"Database Error!\",\r\n                      text: error?.response?.data || \"Unknown Error\",\r\n                      icon: \"error\",\r\n                      buttons: [false, true],\r\n                    });\r\n                  }\r\n                }\r\n              );\r\n            }\r\n            // No Duplicates in the Database\r\n            if (!duplicateUserFlag) {\r\n              // Put the Reference ID (Generated by Cognito into the User Object)\r\n              swal({\r\n                title: \"Registration Successful!\",\r\n                text: \"You are now Registered!\",\r\n                icon: \"success\",\r\n                buttons: [false, true],\r\n              }).then((value) => {\r\n                if (value === true) {\r\n                  // Account Verification Modal\r\n                  AccountVerificationModal(\r\n                    getUser(userObject.email.toLowerCase())\r\n                  );\r\n                  this.setState({ redirect: true });\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      swal({\r\n        title: \"Incorrect Passwords!\",\r\n        text: \"Incorrect username or password.\",\r\n        icon: \"error\",\r\n        buttons: [false, true],\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // Redirect to home if finished registering\r\n    if (this.state.redirect) {\r\n      if (this.props.isLoggedIn) {\r\n        return <Redirect to=\"home\" />;\r\n      } else {\r\n        return <Redirect to=\"login\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Container className=\"userRegisterFormStyle\">\r\n          <Form id=\"userRegisterForm\" onSubmit={this.onSubmit}>\r\n            <h2>Register as User</h2>\r\n            <Row>\r\n              {/** First Name Form Group */}\r\n              <Col>\r\n                <Form.Group controlId=\"firstName\">\r\n                  <Form.Label>First Name*</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={this.state.firstName}\r\n                    onChange={this.formOnChangeHandler}\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              {/** Last Name Form Group */}\r\n              <Col>\r\n                <Form.Group controlId=\"lastName\">\r\n                  <Form.Label>Last Name*</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={this.state.lastName}\r\n                    onChange={this.formOnChangeHandler}\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {/** Email Address Form Group */}\r\n              <Col>\r\n                <Form.Group controlId=\"email\">\r\n                  <Form.Label>Email Address*</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={this.state.email}\r\n                    onChange={this.formOnChangeHandler}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              {/** Phone Number Form Group */}\r\n              <Col>\r\n                <Form.Group controlId=\"phoneNumber\">\r\n                  <Form.Label>Phone Number*</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={this.state.phoneNumber}\r\n                    onChange={this.formOnChangeHandler}\r\n                    type=\"number\"\r\n                    placeholder=\"Phone\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {/** Account Username Form Group */}\r\n              <Col>\r\n                <Form.Group controlId=\"username\">\r\n                  <Form.Label>Account Username*</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={this.state.username}\r\n                    onChange={this.formOnChangeHandler}\r\n                    type=\"text\"\r\n                    placeholder=\"Your Username\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {/** Account Password Form Group */}\r\n              <Col>\r\n                <Form.Group controlId=\"password\">\r\n                  <Form.Label>Create Account Password*</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={this.state.password}\r\n                    onChange={this.formOnChangeHandler}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    Password should be at least 6 characters, have a number, an\r\n                    uppercase and a lower case letter.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {/** Confirm Password Form Group */}\r\n              <Col>\r\n                <Form.Group controlId=\"confirmPassword\">\r\n                  <Form.Label>Confirm Password*</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    onChange={this.formOnChangeHandler}\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {/** Section: Register Button */}\r\n              <CustomButton\r\n                id=\"registerUserButton\"\r\n                type=\"submit\"\r\n                text=\"Register\"\r\n              />\r\n            </Row>\r\n          </Form>\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.userReducer.isLoggedIn,\r\n});\r\n\r\nconst mapDispatchToProps = () => {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps())(UserRegister);\r\n"]},"metadata":{},"sourceType":"module"}