{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\School Stuff\\\\Year 3\\\\Research and Development Part 2\\\\weareus-mvp-website\\\\src\\\\components\\\\search-components\\\\TherapyList.js\";\nimport \"./TherapyList.css\";\nimport React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../api/api\";\n\nclass TherapyList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setServiceKeywords = async () => {\n      // Getting the Services JSON From the Server\n      const serviceResponse = await api.get(\"/lookup_services\"); // Setting the Services State\n\n      this._isMounted && this.setState({\n        services: serviceResponse.data.rows.map(service => service.service_name)\n      });\n    };\n\n    this.state = {\n      services: []\n    }; // Prevents Memory Leaks\n\n    this._isMounted = false;\n  } // Function to Set the Search Service Keywords\n\n\n  componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.setServiceKeywords();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    /** Calculate how many items each of the 4 columns should have */\n    let therapyList = this.state.services;\n    let printColItemAmount = 0; // Map a list element with each item in the placeholder list\n\n    let searchKeywords = [];\n\n    if (therapyList) {\n      printColItemAmount = Math.ceil(therapyList.length / 4);\n      searchKeywords = therapyList.map(searchKeyword => {\n        return /*#__PURE__*/React.createElement(Link, {\n          key: searchKeyword,\n          to: {\n            pathname: \"/results\",\n            search: `?company_name=&service_name=${searchKeyword}&region_name=`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }, searchKeyword));\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"therapyListStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Find a practitioner by therapy type\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, searchKeywords.slice(0, printColItemAmount))), /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, searchKeywords.slice(printColItemAmount, printColItemAmount * 2))), /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, searchKeywords.slice(printColItemAmount * 2, printColItemAmount * 3))), /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, searchKeywords.slice(printColItemAmount * 3, therapyList.length)))));\n  }\n\n}\n\nexport default TherapyList;","map":{"version":3,"sources":["C:/Users/admin/Downloads/School Stuff/Year 3/Research and Development Part 2/weareus-mvp-website/src/components/search-components/TherapyList.js"],"names":["React","Container","Row","Col","Link","api","TherapyList","Component","constructor","props","setServiceKeywords","serviceResponse","get","_isMounted","setState","services","data","rows","map","service","service_name","state","componentDidMount","componentWillUnmount","render","therapyList","printColItemAmount","searchKeywords","Math","ceil","length","searchKeyword","pathname","search","slice"],"mappings":"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","sourcesContent":["import \"./TherapyList.css\";\r\nimport React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport api from \"../../api/api\";\r\n\r\nclass TherapyList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      services: [],\r\n    };\r\n\r\n    // Prevents Memory Leaks\r\n    this._isMounted = false;\r\n  }\r\n\r\n  // Function to Set the Search Service Keywords\r\n  setServiceKeywords = async () => {\r\n    // Getting the Services JSON From the Server\r\n    const serviceResponse = await api.get(\"/lookup_services\");\r\n\r\n    // Setting the Services State\r\n    this._isMounted &&\r\n      this.setState({\r\n        services: serviceResponse.data.rows.map(\r\n          (service) => service.service_name\r\n        ),\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this._isMounted && this.setServiceKeywords();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    /** Calculate how many items each of the 4 columns should have */\r\n    let therapyList = this.state.services;\r\n    let printColItemAmount = 0;\r\n    // Map a list element with each item in the placeholder list\r\n    let searchKeywords = [];\r\n    if (therapyList) {\r\n      printColItemAmount = Math.ceil(therapyList.length / 4);\r\n      searchKeywords = therapyList.map((searchKeyword) => {\r\n        return (\r\n          <Link\r\n            key={searchKeyword}\r\n            to={{\r\n              pathname: \"/results\",\r\n              search: `?company_name=&service_name=${searchKeyword}&region_name=`,\r\n            }}\r\n          >\r\n            <li>{searchKeyword}</li>\r\n          </Link>\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <Container className=\"therapyListStyle\">\r\n        <Row>\r\n          <h4>Find a practitioner by therapy type</h4>\r\n        </Row>\r\n        <Row>\r\n          {/* Loop Through Each Column's Modality, Slice is used so that portions that doesn't exist does not return an error */}\r\n          <Col sm={3}>\r\n            <ul>{searchKeywords.slice(0, printColItemAmount)}</ul>\r\n          </Col>\r\n          <Col sm={3}>\r\n            <ul>\r\n              {searchKeywords.slice(printColItemAmount, printColItemAmount * 2)}\r\n            </ul>\r\n          </Col>\r\n          <Col sm={3}>\r\n            <ul>\r\n              {searchKeywords.slice(\r\n                printColItemAmount * 2,\r\n                printColItemAmount * 3\r\n              )}\r\n            </ul>\r\n          </Col>\r\n          <Col sm={3}>\r\n            <ul>\r\n              {searchKeywords.slice(printColItemAmount * 3, therapyList.length)}\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TherapyList;\r\n"]},"metadata":{},"sourceType":"module"}