{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\School Stuff\\\\Year 3\\\\Research and Development Part 2\\\\weareus-mvp-website\\\\src\\\\components\\\\register-login-components\\\\LoginForm.js\";\nimport \"./LoginForm.css\";\nimport React from \"react\";\nimport { Container, Form, Row, Col } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport swal from \"@sweetalert/with-react\";\nimport { connect } from \"react-redux\";\nimport { signin } from \"../../actions\"; // import GoogleLogin from \"react-google-login\";\n\nimport { getUser, AccountVerificationModal, resetPasswordModal // googleSignInCallBack,\n// facebookSignInCallBack,\n} from \"../../manage-accounts/Accounts\";\nimport CustomButton from \"../general-components/CustomButton\";\nimport { authenticate } from \"../../manage-accounts/Accounts\";\nimport api from \"../../api/api\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserByRef = async referenceId => {\n      let userObj = {\n        user_id: \"\",\n        user_type: \"\",\n        email: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        user_name: \"\",\n        phone: \"\"\n      };\n      const userResponse = await api.get(\"/user/?reference_id=\" + referenceId); // Fill up relevant info and Create the Retrieved User from the Response\n\n      userObj.user_id = userResponse.data.rows[0].user_id;\n      userObj.user_type = userResponse.data.rows[0].user_type;\n      userObj.email = userResponse.data.rows[0].email;\n      userObj.first_name = userResponse.data.rows[0].first_name;\n      userObj.last_name = userResponse.data.rows[0].last_name;\n      userObj.user_name = userResponse.data.rows[0].user_name;\n      userObj.phone = userResponse.data.rows[0].phone;\n\n      if (userObj.user_type === \"practitioner\") {\n        const specialistResponse = await api.get(`/specialist-profile/${userObj.user_id}`);\n        userObj.company_id = specialistResponse.data.company_id;\n      }\n\n      return userObj;\n    };\n\n    this.handleWindowSizeChange = () => {\n      this.setState({\n        width: window.innerWidth\n      });\n    };\n\n    this.formOnChangeHandler = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      authenticate(this.state.email, this.state.password).then(data => {\n        // If The User wants the Device to be Remembered\n        if (this.state.rememberAccount) {\n          getUser(this.state.email).setDeviceStatusRemembered({\n            onSuccess: function (result) {},\n            onFailure: function (err) {}\n          });\n        } else {\n          getUser(this.state.email).setDeviceStatusNotRemembered({\n            onSuccess: function (result) {},\n            onFailure: function (err) {}\n          });\n        } // Successful Login Modal\n\n\n        swal({\n          title: \"Login Successful!\",\n          text: \"Returning you to the homepage...\",\n          icon: \"success\",\n          timer: 3000,\n          buttons: [false, true],\n          closeOnClickOutside: false,\n          closeOnEsc: false\n        }).then(async () => {\n          this.setState({\n            redirect: true\n          });\n          const reference_id = data.accessToken.payload.sub;\n          this.props.signin(reference_id, await this.getUserByRef(reference_id));\n        });\n      }).catch(err => {\n        if (err.code === \"UserNotConfirmedException\") {\n          // Activate Account Verification Modal if not Confirmed\n          AccountVerificationModal(getUser(this.state.email), false);\n        } else {\n          // Unsuccessful Login Modal\n          swal({\n            title: \"Login Unsuccessful!\",\n            text: err.message,\n            icon: \"error\",\n            buttons: [false, true]\n          });\n        }\n      });\n    };\n\n    this.state = {\n      // AWS Cognito Authentication Variables\n      email: \"\",\n      password: \"\",\n      width: window.innerWidth,\n      redirect: false,\n      rememberAccount: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleWindowSizeChange);\n    this.setState({\n      redirect: false\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowSizeChange);\n  } // Function to Get a Specific User by reference_id\n\n\n  render() {\n    const {\n      width\n    } = this.state;\n    const isMobile = width <= 600; // Redirect to home if logged in\n\n    if (this.state.redirect || this.props.isLoggedIn) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (isMobile) {\n      // Mobile version\n      return /*#__PURE__*/React.createElement(Container, {\n        className: \"loginFormStyleMobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, \"Need a We are Us account?\", \" \", /*#__PURE__*/React.createElement(Link, {\n        to: \"practitioner-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"u\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, \"Register\"))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"loginUsername\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        value: this.state.email,\n        onChange: this.formOnChangeHandler,\n        type: \"email\",\n        placeholder: \"Your Email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"loginPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n        value: this.state.password,\n        onChange: this.formOnChangeHandler,\n        type: \"password\",\n        placeholder: \"Your Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"rememberMeCheckBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        label: \"Remember Me\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"u\", {\n        id: \"forgetPasswordMobile\",\n        onClick: e => resetPasswordModal(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      }, \"Forgot Your Password\"))), /*#__PURE__*/React.createElement(CustomButton, {\n        id: \"loginFormButtonMobile\",\n        type: \"submit\",\n        text: \"Log In\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(Container, {\n        className: \"loginFormStyle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }, \"Need a We are Us account?\", \" \", /*#__PURE__*/React.createElement(Link, {\n        to: \"register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"u\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }, \"Register\"))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }\n      }, \"Username or Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        value: this.state.email,\n        onChange: this.formOnChangeHandler,\n        type: \"email\",\n        placeholder: \"Your Username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n        value: this.state.password,\n        onChange: this.formOnChangeHandler,\n        type: \"password\",\n        placeholder: \"Your Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"rememberMeCheckBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        label: \"Remember Me\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"u\", {\n        id: \"forgetPassword\",\n        onClick: e => resetPasswordModal(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, \"Forgot Your Password\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CustomButton, {\n        id: \"loginFormButton\",\n        type: \"submit\",\n        text: \"Log In\",\n        checked: this.state.rememberAccount,\n        onChange: e => {\n          this.setState({\n            rememberAccount: e.target.checked\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"fb-login-button\",\n        href: `https://we-are-us-mvp.auth.ap-southeast-2.amazoncognito.com/oauth2/authorize?identity_provider=Facebook&redirect_uri=http://localhost:3000/home&response_type=TOKEN&client_id=1meh7rvctubo992oppdju9db6g&scope=openid`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }\n      }, \"TEST\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: `https://we-are-us-mvp.auth.ap-southeast-2.amazoncognito.com/oauth2/authorize?identity_provider=Google&redirect_uri=http://localhost:3000/home&response_type=TOKEN&client_id=1meh7rvctubo992oppdju9db6g&scope=openid`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }\n      }, \"TEST\")))));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.userReducer.isLoggedIn\n});\n\nconst mapDispatchToProps = () => {\n  return {\n    signin\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps())(LoginForm);","map":{"version":3,"sources":["C:/Users/admin/Downloads/School Stuff/Year 3/Research and Development Part 2/weareus-mvp-website/src/components/register-login-components/LoginForm.js"],"names":["React","Container","Form","Row","Col","Link","Redirect","swal","connect","signin","getUser","AccountVerificationModal","resetPasswordModal","CustomButton","authenticate","api","LoginForm","Component","constructor","props","getUserByRef","referenceId","userObj","user_id","user_type","email","first_name","last_name","user_name","phone","userResponse","get","data","rows","specialistResponse","company_id","handleWindowSizeChange","setState","width","window","innerWidth","formOnChangeHandler","e","target","id","value","onSubmit","event","preventDefault","state","password","then","rememberAccount","setDeviceStatusRemembered","onSuccess","result","onFailure","err","setDeviceStatusNotRemembered","title","text","icon","timer","buttons","closeOnClickOutside","closeOnEsc","redirect","reference_id","accessToken","payload","sub","catch","code","message","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","isMobile","isLoggedIn","checked","mapStateToProps","userReducer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import \"./LoginForm.css\";\r\nimport React from \"react\";\r\nimport { Container, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport swal from \"@sweetalert/with-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signin } from \"../../actions\";\r\n// import GoogleLogin from \"react-google-login\";\r\nimport {\r\n  getUser,\r\n  AccountVerificationModal,\r\n  resetPasswordModal,\r\n  // googleSignInCallBack,\r\n  // facebookSignInCallBack,\r\n} from \"../../manage-accounts/Accounts\";\r\nimport CustomButton from \"../general-components/CustomButton\";\r\nimport { authenticate } from \"../../manage-accounts/Accounts\";\r\nimport api from \"../../api/api\";\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // AWS Cognito Authentication Variables\r\n      email: \"\",\r\n      password: \"\",\r\n      width: window.innerWidth,\r\n      redirect: false,\r\n      rememberAccount: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleWindowSizeChange);\r\n    this.setState({ redirect: false });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleWindowSizeChange);\r\n  }\r\n\r\n  // Function to Get a Specific User by reference_id\r\n  getUserByRef = async (referenceId) => {\r\n    let userObj = {\r\n      user_id: \"\",\r\n      user_type: \"\",\r\n      email: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      user_name: \"\",\r\n      phone: \"\",\r\n    };\r\n    const userResponse = await api.get(\"/user/?reference_id=\" + referenceId);\r\n    // Fill up relevant info and Create the Retrieved User from the Response\r\n    userObj.user_id = userResponse.data.rows[0].user_id;\r\n    userObj.user_type = userResponse.data.rows[0].user_type;\r\n    userObj.email = userResponse.data.rows[0].email;\r\n    userObj.first_name = userResponse.data.rows[0].first_name;\r\n    userObj.last_name = userResponse.data.rows[0].last_name;\r\n    userObj.user_name = userResponse.data.rows[0].user_name;\r\n    userObj.phone = userResponse.data.rows[0].phone;\r\n\r\n    if (userObj.user_type === \"practitioner\") {\r\n      const specialistResponse = await api.get(\r\n        `/specialist-profile/${userObj.user_id}`\r\n      );\r\n      userObj.company_id = specialistResponse.data.company_id;\r\n    }\r\n    return userObj;\r\n  };\r\n\r\n  handleWindowSizeChange = () => {\r\n    this.setState({ width: window.innerWidth });\r\n  };\r\n\r\n  // Updates States for Login Forms\r\n  formOnChangeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Function to Submit Form and Check For Authentication\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    authenticate(this.state.email, this.state.password)\r\n      .then((data) => {\r\n        // If The User wants the Device to be Remembered\r\n        if (this.state.rememberAccount) {\r\n          getUser(this.state.email).setDeviceStatusRemembered({\r\n            onSuccess: function (result) {},\r\n            onFailure: function (err) {},\r\n          });\r\n        } else {\r\n          getUser(this.state.email).setDeviceStatusNotRemembered({\r\n            onSuccess: function (result) {},\r\n            onFailure: function (err) {},\r\n          });\r\n        }\r\n        // Successful Login Modal\r\n        swal({\r\n          title: \"Login Successful!\",\r\n          text: \"Returning you to the homepage...\",\r\n          icon: \"success\",\r\n          timer: 3000,\r\n          buttons: [false, true],\r\n          closeOnClickOutside: false,\r\n          closeOnEsc: false,\r\n        }).then(async () => {\r\n          this.setState({ redirect: true });\r\n          const reference_id = data.accessToken.payload.sub;\r\n          this.props.signin(\r\n            reference_id,\r\n            await this.getUserByRef(reference_id)\r\n          );\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (err.code === \"UserNotConfirmedException\") {\r\n          // Activate Account Verification Modal if not Confirmed\r\n          AccountVerificationModal(getUser(this.state.email), false);\r\n        } else {\r\n          // Unsuccessful Login Modal\r\n          swal({\r\n            title: \"Login Unsuccessful!\",\r\n            text: err.message,\r\n            icon: \"error\",\r\n            buttons: [false, true],\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { width } = this.state;\r\n    const isMobile = width <= 600;\r\n\r\n    // Redirect to home if logged in\r\n    if (this.state.redirect || this.props.isLoggedIn) {\r\n      return <Redirect to=\"home\" />;\r\n    }\r\n\r\n    if (isMobile) {\r\n      // Mobile version\r\n      return (\r\n        <Container className=\"loginFormStyleMobile\">\r\n          <h2>Login</h2>\r\n          <Form onSubmit={this.onSubmit}>\r\n            <span>\r\n              Need a We are Us account?{\" \"}\r\n              <Link to=\"practitioner-list\">\r\n                <u>Register</u>\r\n              </Link>\r\n            </span>\r\n            {/** Login Username Form Section */}\r\n            <Form.Group controlId=\"loginUsername\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                value={this.state.email}\r\n                onChange={this.formOnChangeHandler}\r\n                type=\"email\"\r\n                placeholder=\"Your Email\"\r\n              />\r\n            </Form.Group>\r\n            {/** Password Form Section */}\r\n            <Form.Group controlId=\"loginPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                value={this.state.password}\r\n                onChange={this.formOnChangeHandler}\r\n                type=\"password\"\r\n                placeholder=\"Your Password\"\r\n              />\r\n            </Form.Group>\r\n            {/** Remember Me and Forget Password Form Section */}\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form.Group controlId=\"rememberMeCheckBox\">\r\n                  <Form.Check type=\"checkbox\" label=\"Remember Me\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col sm={6}>\r\n                <u\r\n                  id=\"forgetPasswordMobile\"\r\n                  onClick={(e) => resetPasswordModal()}\r\n                >\r\n                  Forgot Your Password\r\n                </u>\r\n              </Col>\r\n            </Row>\r\n            <CustomButton\r\n              id=\"loginFormButtonMobile\"\r\n              type=\"submit\"\r\n              text=\"Log In\"\r\n            />\r\n          </Form>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container className=\"loginFormStyle\">\r\n          <h2>Login</h2>\r\n          <Form onSubmit={this.onSubmit}>\r\n            <span>\r\n              Need a We are Us account?{\" \"}\r\n              <Link to=\"register\">\r\n                <u>Register</u>\r\n              </Link>\r\n            </span>\r\n            {/** Login Username Form Section */}\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Username or Email</Form.Label>\r\n              <Form.Control\r\n                value={this.state.email}\r\n                onChange={this.formOnChangeHandler}\r\n                type=\"email\"\r\n                placeholder=\"Your Username\"\r\n              />\r\n            </Form.Group>\r\n            {/** Password Form Section */}\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                value={this.state.password}\r\n                onChange={this.formOnChangeHandler}\r\n                type=\"password\"\r\n                placeholder=\"Your Password\"\r\n              />\r\n            </Form.Group>\r\n            {/** Remember Me and Forget Password Form Section */}\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form.Group controlId=\"rememberMeCheckBox\">\r\n                  <Form.Check type=\"checkbox\" label=\"Remember Me\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col sm={6}>\r\n                <u id=\"forgetPassword\" onClick={(e) => resetPasswordModal()}>\r\n                  Forgot Your Password\r\n                </u>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={5}>\r\n                <CustomButton\r\n                  id=\"loginFormButton\"\r\n                  type=\"submit\"\r\n                  text=\"Log In\"\r\n                  checked={this.state.rememberAccount}\r\n                  onChange={(e) => {\r\n                    this.setState({ rememberAccount: e.target.checked });\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                {/* <div\r\n                  className=\"fb-login-button\"\r\n                  data-size=\"large\"\r\n                  data-button-type=\"continue_with\"\r\n                  data-layout=\"default\"\r\n                  data-auto-logout-link=\"true\"\r\n                  data-use-continue-as=\"false\"\r\n                  data-width=\"\"\r\n                  data-onsuccess={facebookSignInCallBack}\r\n                ></div> */}\r\n                <a\r\n                  className=\"fb-login-button\"\r\n                  href={`https://we-are-us-mvp.auth.ap-southeast-2.amazoncognito.com/oauth2/authorize?identity_provider=Facebook&redirect_uri=http://localhost:3000/home&response_type=TOKEN&client_id=1meh7rvctubo992oppdju9db6g&scope=openid`}\r\n                >\r\n                  TEST\r\n                </a>\r\n              </Col>\r\n              <Col>\r\n                <a\r\n                  href={`https://we-are-us-mvp.auth.ap-southeast-2.amazoncognito.com/oauth2/authorize?identity_provider=Google&redirect_uri=http://localhost:3000/home&response_type=TOKEN&client_id=1meh7rvctubo992oppdju9db6g&scope=openid`}\r\n                >\r\n                  TEST\r\n                </a>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.userReducer.isLoggedIn,\r\n});\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    signin,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps())(LoginForm);\r\n"]},"metadata":{},"sourceType":"module"}