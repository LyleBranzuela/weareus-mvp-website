{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\School Stuff\\\\Year 3\\\\Research and Development Part 2\\\\weareus-mvp-website\\\\src\\\\components\\\\register-login-components\\\\MembershipForm.js\";\nimport \"./MembershipForm.css\";\nimport React from \"react\";\nimport { Container, Form, Row, Col } from \"react-bootstrap\";\nimport swal from \"@sweetalert/with-react\"; // import { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\nimport { Link } from \"react-router-dom\";\nimport AWS from \"aws-sdk\";\nimport CustomButton from \"../general-components/CustomButton\";\nimport UserPool from \"../../manage-accounts/UserPool\";\nimport { AccountVerificationModal, getUser } from \"../../manage-accounts/Accounts\";\nimport { signin } from \"../../actions\";\nimport api from \"../../api/api\";\n\nclass MembershipForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formOnChangeHandler = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n\n      if (this.props.isLoggedIn) {} else {\n        if (this.state.password === this.state.confirmPassword) {\n          let userObject = {\n            first_name: this.state.firstName,\n            last_name: this.state.lastName,\n            user_name: this.state.username,\n            email: this.state.email,\n            phone: this.state.phoneNumber,\n            user_type: \"practitioner\"\n          }; // Create Data Variables with key-value pairing\n\n          let dataFirstName = {\n            Name: \"given_name\",\n            Value: userObject.first_name\n          };\n          let dataLastName = {\n            Name: \"family_name\",\n            Value: userObject.last_name\n          };\n          let dataEmail = {\n            Name: \"email\",\n            Value: userObject.email\n          };\n          let dataPhoneNumber = {\n            Name: \"phone_number\",\n            Value: \"+64\" + userObject.phone\n          };\n          let dataUsername = {\n            Name: \"preferred_username\",\n            Value: userObject.user_name\n          }; // Create the Attributes List of CognitoUserAttributes\n\n          var attributeGivenName = new CognitoUserAttribute(dataFirstName);\n          var attributeFamilyName = new CognitoUserAttribute(dataLastName);\n          var attributeEmail = new CognitoUserAttribute(dataEmail);\n          var attributePhoneNumber = new CognitoUserAttribute(dataPhoneNumber);\n          var attributePreferredUsername = new CognitoUserAttribute(dataUsername); // Push the new CognitoUserAttributes to the Attributes List\n\n          var attributeList = [];\n          attributeList.push(attributeGivenName);\n          attributeList.push(attributeFamilyName);\n          attributeList.push(attributeEmail);\n          attributeList.push(attributePhoneNumber);\n          attributeList.push(attributePreferredUsername); // Signup the Account\n\n          UserPool.signUp(userObject.email, this.state.password, attributeList, null, async (err, data) => {\n            if (err) {\n              if (err.code === \"UsernameExistsException\") {\n                // Error with Signing up\n                swal({\n                  title: \"User Already Exists!\",\n                  text: \"Would you like to login instead?\",\n                  icon: \"error\",\n                  buttons: [\"No\", \"Login\"]\n                }).then(value => {\n                  if (value === true) {\n                    this.setState({\n                      redirect: true\n                    });\n                  }\n                });\n              } else {\n                // Error with Signing up\n                swal({\n                  title: \"Registration Unsuccessful!\",\n                  text: err.message,\n                  icon: \"error\",\n                  buttons: [false, true]\n                });\n              }\n            } else {\n              // If there's a duplicate data in the database, then remove the cognito user\n              let duplicateUserFlag = false;\n\n              try {\n                userObject.reference_id = data.userSub;\n                await api.post(\"/user\", userObject);\n              } catch (error) {\n                duplicateUserFlag = true;\n                const cognitoidentityserviceprovider = new AWS.CognitoIdentityServiceProvider({\n                  accessKeyId: \"AKIA2DSPNNEEZ3CSSBAF\",\n                  secretAccessKey: \"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\",\n                  region: \"ap-southeast-2\"\n                });\n                const params = {\n                  UserPoolId: data.user.pool.userPoolId,\n                  Username: data.user.username\n                };\n                cognitoidentityserviceprovider.adminDeleteUser(params, (err, data) => {\n                  if (err) {\n                    swal({\n                      title: \"Account Cleanup Error\",\n                      text: \"Something went wrong with the account cleanup\",\n                      icon: \"error\",\n                      buttons: [false, true]\n                    });\n                  } else {\n                    var _error$response;\n\n                    swal({\n                      title: \"Database Error!\",\n                      text: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"Unknown Error\",\n                      icon: \"error\",\n                      buttons: [false, true]\n                    });\n                  }\n                });\n              } // No Duplicates in the Database\n\n\n              if (!duplicateUserFlag) {\n                // Put the Reference ID (Generated by Cognito into the User Object)\n                swal({\n                  title: \"Registration Successful!\",\n                  text: \"You are now Registered!\",\n                  icon: \"success\",\n                  buttons: [false, true]\n                }).then(value => {\n                  if (value === true) {\n                    // Account Verification Modal\n                    AccountVerificationModal(getUser(userObject.email.toLowerCase()));\n                    this.setState({\n                      redirect: true\n                    });\n                  }\n                });\n              }\n            }\n          });\n        } else {\n          swal({\n            title: \"Incorrect Passwords!\",\n            text: \"Incorrect username or password.\",\n            icon: \"error\",\n            buttons: [false, true]\n          });\n        }\n      }\n    };\n\n    this.state = {\n      firstName: \"\",\n      // Shown as given_name for AWS Cognito\n      lastName: \"\",\n      // Shown as family_name for AWS Cognito\n      email: \"\",\n      phoneNumber: \"\",\n      username: \"\",\n      // Shown as preferred_username for AWS Cognito\n      password: \"\",\n      confirmPassword: \"\",\n      verifiedAccount: false\n    }; // Prevents Memory Leaks\n\n    this._isMounted = false;\n  } // Handles Any Active Changes on the Form\n\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"membershipFormStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      id: \"membershipForm\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, \"Membership Details\"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }\n    }, \"First Name*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: this.props.user_information.first_name ? this.props.user_information.first_name : this.state.firstName,\n      onChange: this.formOnChangeHandler,\n      type: \"text\",\n      placeholder: \"First Name\",\n      readOnly: this.props.user_information.first_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 19\n      }\n    }, \"Last Name*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: this.props.user_information.last_name ? this.props.user_information.last_name : this.state.lastName,\n      onChange: this.formOnChangeHandler,\n      type: \"text\",\n      placeholder: \"Last Name\",\n      readOnly: this.props.user_information.last_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 19\n      }\n    }, \"Email Address*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: this.props.user_information.email ? this.props.user_information.email : this.state.email,\n      onChange: this.formOnChangeHandler,\n      type: \"text\",\n      placeholder: \"Email\",\n      readOnly: this.props.user_information.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"phoneNumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 19\n      }\n    }, \"Phone Number*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: this.props.user_information.phone ? this.props.user_information.phone : this.state.phoneNumber,\n      onChange: this.formOnChangeHandler,\n      type: \"number\",\n      placeholder: \"Phone\",\n      readOnly: this.props.user_information.phone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }\n    }, \"Account Username*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: this.props.user_information.user_name ? this.props.user_information.user_name : this.state.username,\n      onChange: this.formOnChangeHandler,\n      type: \"text\",\n      placeholder: \"Your Username\",\n      readOnly: this.props.user_information.user_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 19\n      }\n    })))), !this.props.isLoggedIn && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 23\n      }\n    }, \"Create Account Password*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: this.state.password,\n      onChange: this.formOnChangeHandler,\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 23\n      }\n    }, \"Password should be at least 6 characters, have a number, an uppercase and a lower case letter.\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 23\n      }\n    }, \"Confirm Password*\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      onChange: this.formOnChangeHandler,\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 23\n      }\n    }))))), /*#__PURE__*/React.createElement(Container, {\n      className: \"totalCostContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 19\n      }\n    }, \"Your Order\"), /*#__PURE__*/React.createElement(\"hr\", {\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"orderFormSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 23\n      }\n    }, \"Membership\")), /*#__PURE__*/React.createElement(Col, {\n      sm: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"orderDataSection\",\n      id: \"orderMembership\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 23\n      }\n    }, `${this.props.location.state.subscriptionType} plan`))), /*#__PURE__*/React.createElement(\"hr\", {\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"orderFormSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 23\n      }\n    }, \"Total\")), /*#__PURE__*/React.createElement(Col, {\n      sm: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"orderDataSection\",\n      id: \"orderTotal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 23\n      }\n    }, `$${this.props.location.state.price * 12} / year`))), /*#__PURE__*/React.createElement(\"hr\", {\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"orderFormSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 23\n      }\n    }, \"Recurring Totals\")), /*#__PURE__*/React.createElement(Col, {\n      sm: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"orderDataSection\",\n      id: \"orderRecurringTotal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 23\n      }\n    }, \"$0000 (Includes $22.35 GST)/year (renewal: July 23, 2019)\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/profile-setup\",\n        state: {\n          subscription_id: this.props.location.state.subscription_id\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      id: \"paymentFormButton\",\n      type: \"submit\",\n      text: \"Payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 21\n      }\n    }))))))));\n  }\n\n} // Setup Redux States\n\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.userReducer.isLoggedIn,\n    user_information: state.userReducer.user_information\n  };\n}; // Setup Redux Actions\n\n\nconst mapDispatchToProps = () => {\n  return {\n    signin\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps())(MembershipForm);","map":{"version":3,"sources":["C:/Users/admin/Downloads/School Stuff/Year 3/Research and Development Part 2/weareus-mvp-website/src/components/register-login-components/MembershipForm.js"],"names":["React","Container","Form","Row","Col","swal","connect","CognitoUserAttribute","Link","AWS","CustomButton","UserPool","AccountVerificationModal","getUser","signin","api","MembershipForm","Component","constructor","props","formOnChangeHandler","e","setState","target","id","value","onSubmit","event","preventDefault","isLoggedIn","state","password","confirmPassword","userObject","first_name","firstName","last_name","lastName","user_name","username","email","phone","phoneNumber","user_type","dataFirstName","Name","Value","dataLastName","dataEmail","dataPhoneNumber","dataUsername","attributeGivenName","attributeFamilyName","attributeEmail","attributePhoneNumber","attributePreferredUsername","attributeList","push","signUp","err","data","code","title","text","icon","buttons","then","redirect","message","duplicateUserFlag","reference_id","userSub","post","error","cognitoidentityserviceprovider","CognitoIdentityServiceProvider","accessKeyId","secretAccessKey","region","params","UserPoolId","user","pool","userPoolId","Username","adminDeleteUser","response","toLowerCase","verifiedAccount","_isMounted","componentDidMount","componentWillUnmount","render","user_information","location","subscriptionType","price","pathname","subscription_id","mapStateToProps","userReducer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import \"./MembershipForm.css\";\r\nimport React from \"react\";\r\nimport { Container, Form, Row, Col } from \"react-bootstrap\";\r\nimport swal from \"@sweetalert/with-react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AWS from \"aws-sdk\";\r\nimport CustomButton from \"../general-components/CustomButton\";\r\nimport UserPool from \"../../manage-accounts/UserPool\";\r\nimport {\r\n  AccountVerificationModal,\r\n  getUser,\r\n} from \"../../manage-accounts/Accounts\";\r\nimport { signin } from \"../../actions\";\r\nimport api from \"../../api/api\";\r\n\r\nclass MembershipForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\", // Shown as given_name for AWS Cognito\r\n      lastName: \"\", // Shown as family_name for AWS Cognito\r\n      email: \"\",\r\n      phoneNumber: \"\",\r\n      username: \"\", // Shown as preferred_username for AWS Cognito\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      verifiedAccount: false,\r\n    };\r\n\r\n    // Prevents Memory Leaks\r\n    this._isMounted = false;\r\n  }\r\n\r\n  // Handles Any Active Changes on the Form\r\n  formOnChangeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Function to Submit Register Form (Email, Password, First and Last name, Phone Number, Preferred Username)\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.isLoggedIn) {\r\n    } else {\r\n      if (this.state.password === this.state.confirmPassword) {\r\n        let userObject = {\r\n          first_name: this.state.firstName,\r\n          last_name: this.state.lastName,\r\n          user_name: this.state.username,\r\n          email: this.state.email,\r\n          phone: this.state.phoneNumber,\r\n          user_type: \"practitioner\",\r\n        };\r\n\r\n        // Create Data Variables with key-value pairing\r\n        let dataFirstName = {\r\n          Name: \"given_name\",\r\n          Value: userObject.first_name,\r\n        };\r\n        let dataLastName = {\r\n          Name: \"family_name\",\r\n          Value: userObject.last_name,\r\n        };\r\n        let dataEmail = {\r\n          Name: \"email\",\r\n          Value: userObject.email,\r\n        };\r\n        let dataPhoneNumber = {\r\n          Name: \"phone_number\",\r\n          Value: \"+64\" + userObject.phone,\r\n        };\r\n        let dataUsername = {\r\n          Name: \"preferred_username\",\r\n          Value: userObject.user_name,\r\n        };\r\n\r\n        // Create the Attributes List of CognitoUserAttributes\r\n        var attributeGivenName = new CognitoUserAttribute(dataFirstName);\r\n        var attributeFamilyName = new CognitoUserAttribute(dataLastName);\r\n        var attributeEmail = new CognitoUserAttribute(dataEmail);\r\n        var attributePhoneNumber = new CognitoUserAttribute(dataPhoneNumber);\r\n        var attributePreferredUsername = new CognitoUserAttribute(dataUsername);\r\n\r\n        // Push the new CognitoUserAttributes to the Attributes List\r\n        var attributeList = [];\r\n        attributeList.push(attributeGivenName);\r\n        attributeList.push(attributeFamilyName);\r\n        attributeList.push(attributeEmail);\r\n        attributeList.push(attributePhoneNumber);\r\n        attributeList.push(attributePreferredUsername);\r\n\r\n        // Signup the Account\r\n        UserPool.signUp(\r\n          userObject.email,\r\n          this.state.password,\r\n          attributeList,\r\n          null,\r\n          async (err, data) => {\r\n            if (err) {\r\n              if (err.code === \"UsernameExistsException\") {\r\n                // Error with Signing up\r\n                swal({\r\n                  title: \"User Already Exists!\",\r\n                  text: \"Would you like to login instead?\",\r\n                  icon: \"error\",\r\n                  buttons: [\"No\", \"Login\"],\r\n                }).then((value) => {\r\n                  if (value === true) {\r\n                    this.setState({ redirect: true });\r\n                  }\r\n                });\r\n              } else {\r\n                // Error with Signing up\r\n                swal({\r\n                  title: \"Registration Unsuccessful!\",\r\n                  text: err.message,\r\n                  icon: \"error\",\r\n                  buttons: [false, true],\r\n                });\r\n              }\r\n            } else {\r\n              // If there's a duplicate data in the database, then remove the cognito user\r\n              let duplicateUserFlag = false;\r\n              try {\r\n                userObject.reference_id = data.userSub;\r\n                await api.post(\"/user\", userObject);\r\n              } catch (error) {\r\n                duplicateUserFlag = true;\r\n                const cognitoidentityserviceprovider = new AWS.CognitoIdentityServiceProvider(\r\n                  {\r\n                    accessKeyId: \"AKIA2DSPNNEEZ3CSSBAF\",\r\n                    secretAccessKey: \"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\",\r\n                    region: \"ap-southeast-2\",\r\n                  }\r\n                );\r\n                const params = {\r\n                  UserPoolId: data.user.pool.userPoolId,\r\n                  Username: data.user.username,\r\n                };\r\n                cognitoidentityserviceprovider.adminDeleteUser(\r\n                  params,\r\n                  (err, data) => {\r\n                    if (err) {\r\n                      swal({\r\n                        title: \"Account Cleanup Error\",\r\n                        text: \"Something went wrong with the account cleanup\",\r\n                        icon: \"error\",\r\n                        buttons: [false, true],\r\n                      });\r\n                    } else {\r\n                      swal({\r\n                        title: \"Database Error!\",\r\n                        text: error?.response?.data || \"Unknown Error\",\r\n                        icon: \"error\",\r\n                        buttons: [false, true],\r\n                      });\r\n                    }\r\n                  }\r\n                );\r\n              }\r\n              // No Duplicates in the Database\r\n              if (!duplicateUserFlag) {\r\n                // Put the Reference ID (Generated by Cognito into the User Object)\r\n                swal({\r\n                  title: \"Registration Successful!\",\r\n                  text: \"You are now Registered!\",\r\n                  icon: \"success\",\r\n                  buttons: [false, true],\r\n                }).then((value) => {\r\n                  if (value === true) {\r\n                    // Account Verification Modal\r\n                    AccountVerificationModal(\r\n                      getUser(userObject.email.toLowerCase())\r\n                    );\r\n                    this.setState({ redirect: true });\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          }\r\n        );\r\n      } else {\r\n        swal({\r\n          title: \"Incorrect Passwords!\",\r\n          text: \"Incorrect username or password.\",\r\n          icon: \"error\",\r\n          buttons: [false, true],\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Container className=\"membershipFormStyle\">\r\n          <Form id=\"membershipForm\" onSubmit={this.onSubmit}>\r\n            <h2>Membership Details</h2>\r\n            <Row>\r\n              {/** First Name Form Group */}\r\n              <Col>\r\n                <Form.Group controlId=\"firstName\">\r\n                  <Form.Label>First Name*</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={\r\n                      this.props.user_information.first_name\r\n                        ? this.props.user_information.first_name\r\n                        : this.state.firstName\r\n                    }\r\n                    onChange={this.formOnChangeHandler}\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    readOnly={this.props.user_information.first_name}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              {/** Last Name Form Group */}\r\n              <Col>\r\n                <Form.Group controlId=\"lastName\">\r\n                  <Form.Label>Last Name*</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={\r\n                      this.props.user_information.last_name\r\n                        ? this.props.user_information.last_name\r\n                        : this.state.lastName\r\n                    }\r\n                    onChange={this.formOnChangeHandler}\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    readOnly={this.props.user_information.last_name}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {/** Email Address Form Group */}\r\n              <Col>\r\n                <Form.Group controlId=\"email\">\r\n                  <Form.Label>Email Address*</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={\r\n                      this.props.user_information.email\r\n                        ? this.props.user_information.email\r\n                        : this.state.email\r\n                    }\r\n                    onChange={this.formOnChangeHandler}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    readOnly={this.props.user_information.email}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              {/** Phone Number Form Group */}\r\n              <Col>\r\n                <Form.Group controlId=\"phoneNumber\">\r\n                  <Form.Label>Phone Number*</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={\r\n                      this.props.user_information.phone\r\n                        ? this.props.user_information.phone\r\n                        : this.state.phoneNumber\r\n                    }\r\n                    onChange={this.formOnChangeHandler}\r\n                    type=\"number\"\r\n                    placeholder=\"Phone\"\r\n                    readOnly={this.props.user_information.phone}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {/** Account Username Form Group */}\r\n              <Col>\r\n                <Form.Group controlId=\"username\">\r\n                  <Form.Label>Account Username*</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={\r\n                      this.props.user_information.user_name\r\n                        ? this.props.user_information.user_name\r\n                        : this.state.username\r\n                    }\r\n                    onChange={this.formOnChangeHandler}\r\n                    type=\"text\"\r\n                    placeholder=\"Your Username\"\r\n                    readOnly={this.props.user_information.user_name}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            {!this.props.isLoggedIn && (\r\n              <div>\r\n                <Row>\r\n                  {/** Account Password Form Group */}\r\n                  <Col>\r\n                    <Form.Group controlId=\"password\">\r\n                      <Form.Label>Create Account Password*</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        value={this.state.password}\r\n                        onChange={this.formOnChangeHandler}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n                      <Form.Text className=\"text-muted\">\r\n                        Password should be at least 6 characters, have a number,\r\n                        an uppercase and a lower case letter.\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  {/** Confirm Password Form Group */}\r\n                  <Col>\r\n                    <Form.Group controlId=\"confirmPassword\">\r\n                      <Form.Label>Confirm Password*</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        onChange={this.formOnChangeHandler}\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            )}\r\n\r\n            {/** Total Cost Calculator Section */}\r\n            <Container className=\"totalCostContainer\">\r\n              <Row>\r\n                <Col>\r\n                  <h2>Your Order</h2>\r\n                  <hr size=\"50\" />\r\n                  {/** Section: Membership Type */}\r\n                  <Row>\r\n                    <Col sm={3}>\r\n                      <span className=\"orderFormSection\">Membership</span>\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <span className=\"orderDataSection\" id=\"orderMembership\">\r\n                        {`${this.props.location.state.subscriptionType} plan`}\r\n                      </span>\r\n                    </Col>\r\n                  </Row>\r\n                  <hr size=\"50\" />\r\n                  {/** Section: Total Amount */}\r\n                  <Row>\r\n                    <Col sm={3}>\r\n                      <span className=\"orderFormSection\">Total</span>\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <span className=\"orderDataSection\" id=\"orderTotal\">\r\n                        {`$${this.props.location.state.price * 12} / year`}\r\n                      </span>\r\n                    </Col>\r\n                  </Row>\r\n                  <hr size=\"50\" />\r\n                  {/** Section: Recurring Totals Amount */}\r\n                  <Row>\r\n                    <Col sm={3}>\r\n                      <span className=\"orderFormSection\">Recurring Totals</span>\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <span\r\n                        className=\"orderDataSection\"\r\n                        id=\"orderRecurringTotal\"\r\n                      >\r\n                        $0000 (Includes $22.35 GST)/year (renewal: July 23,\r\n                        2019)\r\n                      </span>\r\n                    </Col>\r\n                  </Row>\r\n                  <hr size=\"50\" />\r\n                  {/** Section: Pay Button */}\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/profile-setup\",\r\n                      state: {\r\n                        subscription_id: this.props.location.state\r\n                          .subscription_id,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <CustomButton\r\n                      id=\"paymentFormButton\"\r\n                      type=\"submit\"\r\n                      text=\"Payment\"\r\n                    />\r\n                  </Link>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Form>\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// Setup Redux States\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.userReducer.isLoggedIn,\r\n    user_information: state.userReducer.user_information,\r\n  };\r\n};\r\n\r\n// Setup Redux Actions\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    signin,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps())(MembershipForm);\r\n"]},"metadata":{},"sourceType":"module"}