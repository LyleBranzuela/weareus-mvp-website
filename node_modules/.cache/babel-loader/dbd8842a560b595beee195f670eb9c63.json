{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\School Stuff\\\\Year 3\\\\Research and Development Part 2\\\\weareus-mvp-website\\\\src\\\\components\\\\register-login-components\\\\ProfileSetup.js\";\nimport \"./ProfileSetup.css\";\nimport React from \"react\";\nimport { Container, Form, Row, Col } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CustomButton from \"../general-components/CustomButton\";\nimport swal from \"@sweetalert/with-react\";\nimport api from \"../../api/api\";\n\nclass ProfileSetup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setFormCheckboxes = async () => {\n      // Getting the Services and Regions JSON From the Server\n      const serviceResponse = await api.get(\"/lookup_services\");\n      const accreditationResponse = await api.get(\"/lookup_accreditation\"); // Setting the Services and Regions States\n\n      this._isMounted && this.setState({\n        services: serviceResponse.data.rows,\n        accreditations: accreditationResponse.data.rows\n      });\n    };\n\n    this.checkField = (field, tag) => {\n      if (field !== \"\" || field) {\n        return tag;\n      }\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      let missingFields = [];\n\n      if (missingFields.length > 0) {\n        swal({\n          title: \"Unsuccessful!\",\n          text: `Missing Fields: ${missingFields.join(\", \")}`,\n          icon: \"error\",\n          buttons: [false, true]\n        });\n      } else {\n        let companyObject = {\n          // Company Details States\n          company_name: this.state.company_name,\n          subscription_id: this.props.location.state.subscription_id,\n          logo: this.state.logo,\n          email: this.state.email,\n          phone: this.state.phone,\n          about: this.state.about,\n          country_name: \"New Zealand\",\n          city_name: this.state.city_name,\n          region_name: this.state.region_name,\n          building_number: this.state.building_number,\n          street: this.state.street,\n          suburb: this.state.suburb,\n          postal_code: this.state.postal_code,\n          chosen_accreditation: this.state.chosen_accreditation,\n          chosen_services: this.state.chosen_services,\n          cover_images: this.state.cover_images,\n          // Practitioner (First Specialist) States\n          user_id: this.state.user_id,\n          profile_picture: this.state.profile_picture,\n          diplomas: this.state.diplomas,\n          certifications: this.state.certifications,\n          memberships: this.state.memberships,\n          chosen_specialties: this.state.chosen_specialties\n        }; // Generate a Company\n\n        try {\n          const response = await api.post(\"/company\", companyObject);\n          console.log(response);\n        } catch (error) {\n          var _error$response;\n\n          swal({\n            title: \"Database Error!\",\n            text: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"Unknown Error\",\n            icon: \"error\",\n            buttons: [false, true]\n          });\n        }\n      }\n    };\n\n    this.formOnChangeHandler = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onChangeImageHandler = async e => {\n      const target = e.target.id;\n\n      if (e.target.files[0]) {\n        const data = new FormData();\n        data.append(\"image\", e.target.files[0]);\n        const uploadResponse = await api.post(\"/upload?user_id=\" + 8 + \"&folder=\" + e.target.id, data); // let img = new Image();\n        // img.src = uploadResponse.data.fileName;\n        // src.onChange =\n        // console.log(img);\n        // if (img.width === 720 && img.height === 720) {\n        //   console.log(\"WORKED!\");\n        // } else {\n        //   console.log(\"ERROR!\" + img.width + \"|\" + img.height);\n        // }\n\n        if (target !== \"cover_images\") {\n          this.setState({\n            [target]: uploadResponse.data.fileName\n          });\n          localStorage.setItem(\"logo\", uploadResponse.data.fileName);\n        } else {\n          this.setState({\n            cover_images: this.state.cover_images.concat([uploadResponse.data.fileName])\n          });\n        }\n      }\n    };\n\n    this.addPractitionerCredential = (e, credential) => {\n      e.preventDefault();\n      let chosenCredentialObj = {};\n      let errorFlag = false;\n      let errorMessage = \"\";\n\n      switch (credential) {\n        case \"diplomas\":\n          if (this.state.diploma_name === \"\" || !this.state.diploma_name || !this.state.diploma_name.replace(/\\s/g, \"\").length) {\n            // Unsuccessful Addition of Pracititoner Modal\n            errorMessage = \"Please input a Diploma\";\n            errorFlag = true;\n          } else {\n            chosenCredentialObj = {\n              diploma_name: this.state.diploma_name,\n              time_taken: this.state.diploma_time_taken\n            };\n            this.setState({\n              diploma_name: \"\",\n              diploma_time_taken: \"\"\n            });\n          }\n\n          break;\n\n        case \"certifications\":\n          if (this.state.certification_name === \"\" || !this.state.certification_name || !this.state.certification_name.replace(/\\s/g, \"\").length) {\n            // Unsuccessful Addition of Pracititoner Modal\n            errorMessage = \"Please input a Certification\";\n            errorFlag = true;\n          } else {\n            chosenCredentialObj = {\n              certification_name: this.state.certification_name,\n              time_taken: this.state.certification_time_taken\n            };\n            this.setState({\n              certification_name: \"\",\n              certification_time_taken: \"\"\n            });\n          }\n\n          break;\n\n        case \"memberships\":\n          if (this.state.membership_name === \"\" || !this.state.membership_name || !this.state.membership_name.replace(/\\s/g, \"\").length) {\n            // Unsuccessful Addition of Pracititoner Modal\n            errorMessage = \"Please input a Membership\";\n            errorFlag = true;\n          } else {\n            chosenCredentialObj = {\n              membership_name: this.state.membership_name,\n              website: this.state.membership_website\n            };\n            this.setState({\n              membership_name: \"\",\n              membership_website: \"\"\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (!errorFlag) {\n        // Add to the List\n        this.setState({\n          [credential]: [...this.state[credential], chosenCredentialObj]\n        });\n      } else {\n        swal({\n          title: \"Unsuccessful!\",\n          text: errorMessage,\n          icon: \"error\",\n          buttons: [false, true]\n        });\n      }\n    };\n\n    this.checkboxOnChangeHandler = (event, serviceType) => {\n      // Array of Currently Chosen Services/Accredation\n      let chosen_services_list = this.state[serviceType];\n      let check = event.target.checked;\n      let checked_service = event.target.value;\n\n      if (check) {\n        // Add the value of the checkbox to chosen services/accreditation array\n        chosen_services_list.push(checked_service);\n      } else {\n        // Update the state with the new array of services/accreditation\n        var index = chosen_services_list.indexOf(checked_service);\n\n        if (index > -1) {\n          chosen_services_list.splice(index, 1);\n        }\n      } // Update the Services Array State\n\n\n      this.setState({\n        [serviceType]: chosen_services_list\n      });\n    };\n\n    this.state = {\n      services: [],\n      accreditations: [],\n      specialties: [],\n      search_filter: \"\",\n      // Company Details States\n      company_name: \"\",\n      logo: \"\",\n      email: this.props.user_information.email,\n      phone: this.props.user_information.phone,\n      about: \"\",\n      country_name: \"New Zealand\",\n      city_name: \"\",\n      region_name: \"\",\n      building_number: \"\",\n      street: \"\",\n      suburb: \"\",\n      postal_code: \"\",\n      chosen_accreditation: [],\n      chosen_services: [],\n      cover_images: [],\n      // Practitioner (First Specialist) States\n      user_id: this.props.user_information.user_id,\n      profile_picture: \"\",\n      diplomas: [],\n      certifications: [],\n      memberships: [],\n      chosen_specialties: [],\n      // Temporary Practitioner Placeholders (Holding Diplomas, Certificates, and Memberships Data)\n      diploma_name: \"\",\n      diploma_time_taken: \"\",\n      certification_name: \"\",\n      certification_time_taken: \"\",\n      membership_name: \"\",\n      membership_website: \"\"\n    }; // Prevents Memory Leaks\n\n    this._isMounted = false;\n  } // Function to Set the Checkboxes for Accredations and Services\n\n\n  componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.setFormCheckboxes();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  } // Function to check if the field is empty or not\n\n\n  render() {\n    // Map the dropdown items of Services\n    let serviceKeywords = [];\n\n    if (this.state.services) {\n      let filteredServices = this.state.services;\n\n      if (this.state.search_filter && this.state.search_filter !== \"\") {\n        filteredServices = this.state.services.filter(service => {\n          return service.service_name.toLowerCase().includes(this.state.search_filter.toLowerCase());\n        });\n      }\n\n      serviceKeywords = filteredServices.map(service => {\n        let check = this.state.chosen_services.indexOf(service.service_id.toString());\n        return /*#__PURE__*/React.createElement(\"label\", {\n          id: `service-${service.service_id}`,\n          key: service.service_id,\n          className: \"serviceContainer container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 11\n          }\n        }, service.service_name, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: service.service_name,\n          value: service.service_id,\n          checked: check !== -1,\n          onChange: e => {\n            this.checkboxOnChangeHandler(e, \"chosen_services\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"checkBoxFill\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }\n        }));\n      });\n    } // Map the checkboxes of accreditations\n\n\n    let accreditationBoxes = [];\n\n    if (this.state.accreditations) {\n      accreditationBoxes = this.state.accreditations.map(accreditation => {\n        return /*#__PURE__*/React.createElement(\"label\", {\n          id: `accreditation-${accreditation.accreditation_id}`,\n          key: accreditation.accreditation_id,\n          className: \"serviceContainer container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 11\n          }\n        }, accreditation.accreditation_name, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: accreditation.accreditation_name,\n          value: accreditation.accreditation_id,\n          onChange: e => {\n            this.checkboxOnChangeHandler(e, \"chosen_accreditation\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"checkBoxFill\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }\n        }));\n      });\n    } // Redirect to home if logged in\n\n\n    if (this.props.user_information.user_type === \"practitioner\") {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"profileSetupStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }\n    }, \"Profile Set-up\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }\n    }, \"Great, now that you are one of Us, we want to get you started in the best possible way.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }\n    }, \"So before you get started, ensure you check out our\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }\n    }, \"how-to-guide\")), \" \", \"we've put together for you on how to showcase your business as it provides you with templates and information so you can put your best foot forward.\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }\n    }, \"Download profile how-to-guide\")), /*#__PURE__*/React.createElement(\"hr\", {\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }\n    }, \"Your Company Name\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"company_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 13\n      }\n    }, \"This is the name that gets highlighted on your We are Us page.\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      placeholder: \"Enter Company Name\",\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }\n    }, \"Your Contact Details\"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"first_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }\n    }, \"Your First Name:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      placeholder: \"Enter First Name\",\n      defaultValue: this.props.user_information.first_name,\n      onChange: this.formOnChangeHandler,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"last_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }\n    }, \"Your Last Name:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      placeholder: \"Enter Last Name\",\n      defaultValue: this.props.user_information.last_name,\n      onChange: this.formOnChangeHandler,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 17\n      }\n    }, \"Your Company's Contact Phone Number:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"number\",\n      defaultValue: this.state.phone,\n      placeholder: \"Enter Contact Number\",\n      onChange: this.formOnChangeHandler // readOnly={this.props.location.state.phone ? true : false}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }\n    }, \"Your Company's Contact Email:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"email\",\n      defaultValue: this.state.email,\n      placeholder: \"Enter Email\",\n      onChange: this.formOnChangeHandler // readOnly={this.props.location.state.email ? true : false}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"building_number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }\n    }, \"Building Name/Number:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Building Name/Number\",\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"street\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }\n    }, \"Street:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Street\",\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"region_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }\n    }, \"Region:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      placeholder: \"Enter Region\",\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"city_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }\n    }, \"City:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      placeholder: \"Enter City\",\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"suburb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 17\n      }\n    }, \"Town/Suburb:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      placeholder: \"Enter Town/Suburb\",\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"postal_code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 17\n      }\n    }, \"Postcode:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      placeholder: \"Enter Postcode\",\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"hr\", {\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }\n    }, \"Your Logo\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 13\n      }\n    }, \"Size: 720px wide by 720px high\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 13\n      }\n    }), this.state.logo ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"company-logo\",\n      src: this.state.logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"company-logo-placeholder\",\n      src: require(\"../../assets/images/placeholders/logo_placeholder.PNG\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-file-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"logo\",\n      type: \"file\",\n      accept: \"image/*\",\n      name: \"logo\",\n      onChange: e => {\n        this.onChangeImageHandler(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 15\n      }\n    }, \"Change Image\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 11\n      }\n    }, \"Your Profile Image\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"profile_picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 13\n      }\n    }, \"This is where you put your headshot so people can put a face to a name. \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 21\n      }\n    }), \"Size: 720px wide by 720px high\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 13\n      }\n    }), this.state.profile_picture ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"profile-pic\",\n      src: this.state.profile_picture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"profile-pic-placeholder\",\n      src: require(\"../../assets/images/placeholders/profile_picture_placeholder.PNG\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-file-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"profile_picture\",\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => {\n        this.onChangeImageHandler(e, false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 15\n      }\n    }, \"Change Image\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 11\n      }\n    }, this.state.cover_images.toString()), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 11\n      }\n    }, \"Your Cover Image\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"cover_images\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 13\n      }\n    }, \"Remember your photo is what people see first. In a blink of an eye they'll make a decision about your business, so make sure all images show trust, confidence, professionalism, and personality. Size: 1440px wide by 520px high (this ensures faster loading of your listing)\"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-file-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"cover_images\",\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => {\n        this.onChangeImageHandler(e, true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 19\n      }\n    }, \"Change Image\"))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"hr\", {\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 11\n      }\n    }, \"About your Practice\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"about\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 13\n      }\n    }, \"First impressions count. The first 120 characters, or about 20 words, is what shows if you're featured on the home page after launch, and on your profile page the first 70 words of the first paragraph are shown on your listing. The best length for your copy is the time it takes to get your key message across.\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      as: \"textarea\",\n      rows: \"5\",\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 11\n      }\n    }, \"Your Services\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"profileSetupAccredation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 11\n      }\n    }, accreditationBoxes), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"search_filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 13\n      }\n    }, \"Search Service:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"mb-3\",\n      type: \"text\",\n      placeholder: \"Begin typing your service eg. Acupuncture...\",\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 13\n      }\n    }, \"Or select from the following list:\"), /*#__PURE__*/React.createElement(Container, {\n      className: \"checkboxContainerList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 13\n      }\n    }, serviceKeywords)), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"profileSetupOtherServices\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 13\n      }\n    }, \"Other:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 11\n      }\n    }, \"Training, Qualifications, & Memberships\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }\n    }, \"A note about what this is and how many words.\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"diploma_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"qualificationLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Graduation Hat\",\n      src: require(\"../../assets/icons/icon_diploma.svg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 15\n      }\n    }), \"My Diplomas\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"addAnotherIcon\",\n      onClick: e => {\n        this.addPractitionerCredential(e, \"diplomas\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"../../assets/icons/plus_circle_fill.svg\"),\n      alt: \"plus_circle_fill\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 15\n      }\n    }, \"Add another\")), this.state.diplomas && this.state.diplomas.map((diploma, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"customTrainingStyle\",\n        key: `${index}-${diploma.diploma_name}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 11,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: `${diploma.diploma_name} ${diploma.time_taken && \"(\" + diploma.time_taken + \")\"}`,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        sm: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(CustomButton, {\n        text: \"x\",\n        onClick: () => {\n          let splicedDiplomas = this.state.diplomas;\n          splicedDiplomas.splice(index, 1);\n          this.setState({\n            diplomas: splicedDiplomas\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 25\n        }\n      }))));\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      value: this.state.diploma_name,\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"diploma_time_taken\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 13\n      }\n    }, \"Time taken to complete training (optional)\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      value: this.state.diploma_time_taken,\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"certification_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"qualificationLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Certificate Ribbon\",\n      src: require(\"../../assets/icons/icon_certificate.svg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 15\n      }\n    }), \"My Certificates\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"addAnotherIcon\",\n      onClick: e => {\n        this.addPractitionerCredential(e, \"certifications\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"../../assets/icons/plus_circle_fill.svg\"),\n      alt: \"plus_circle_fill\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 15\n      }\n    }, \"Add another\")), this.state.certifications && this.state.certifications.map((certification, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"customTrainingStyle\",\n        key: `${index}-${certification.certification_name}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 11,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: `${certification.certification_name} ${certification.time_taken && \"(\" + certification.time_taken + \")\"}`,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        sm: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(CustomButton, {\n        text: \"-\",\n        onClick: () => {\n          let splicedCertifications = this.state.certifications;\n          splicedCertifications.splice(index, 1);\n          this.setState({\n            certifications: splicedCertifications\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 25\n        }\n      }))));\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      value: this.state.certification_name,\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"certification_time_taken\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 13\n      }\n    }, \"Time taken to complete training (optional)\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      value: this.state.certification_time_taken,\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"membership_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"qualificationLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Membership Group\",\n      src: require(\"../../assets/icons/icon_memberships.svg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 15\n      }\n    }), \"My Memberships\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"addAnotherIcon\",\n      onClick: e => {\n        this.addPractitionerCredential(e, \"memberships\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"../../assets/icons/plus_circle_fill.svg\"),\n      alt: \"plus_circle_fill\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 15\n      }\n    }, \"Add another\")), this.state.memberships && this.state.memberships.map((membership, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"customTrainingStyle\",\n        key: `${index}-${membership.membership_name}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 11,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: `${membership.membership_name} ${membership.website && \"(\" + membership.website + \")\"}`,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        sm: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(CustomButton, {\n        text: \"-\",\n        onClick: () => {\n          let splicedMemberships = this.state.memberships;\n          splicedMemberships.splice(index, 1);\n          this.setState({\n            memberships: splicedMemberships\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 25\n        }\n      }))));\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      value: this.state.membership_name,\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"membership_website\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 13\n      }\n    }, \"Website (optional)\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"http://\",\n      value: this.state.membership_website,\n      onChange: this.formOnChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(CustomButton, {\n      id: \"saveProfileButton\",\n      type: \"submit\",\n      text: \"Save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.userReducer.isLoggedIn,\n  user_information: state.userReducer.user_information\n});\n\nconst mapDispatchToProps = () => {};\n\nexport default connect(mapStateToProps, mapDispatchToProps())(ProfileSetup);","map":{"version":3,"sources":["C:/Users/admin/Downloads/School Stuff/Year 3/Research and Development Part 2/weareus-mvp-website/src/components/register-login-components/ProfileSetup.js"],"names":["React","Container","Form","Row","Col","Redirect","connect","CustomButton","swal","api","ProfileSetup","Component","constructor","props","setFormCheckboxes","serviceResponse","get","accreditationResponse","_isMounted","setState","services","data","rows","accreditations","checkField","field","tag","onSubmit","event","preventDefault","missingFields","length","title","text","join","icon","buttons","companyObject","company_name","state","subscription_id","location","logo","email","phone","about","country_name","city_name","region_name","building_number","street","suburb","postal_code","chosen_accreditation","chosen_services","cover_images","user_id","profile_picture","diplomas","certifications","memberships","chosen_specialties","response","post","console","log","error","formOnChangeHandler","e","target","id","value","onChangeImageHandler","files","FormData","append","uploadResponse","fileName","localStorage","setItem","concat","addPractitionerCredential","credential","chosenCredentialObj","errorFlag","errorMessage","diploma_name","replace","time_taken","diploma_time_taken","certification_name","certification_time_taken","membership_name","website","membership_website","checkboxOnChangeHandler","serviceType","chosen_services_list","check","checked","checked_service","push","index","indexOf","splice","specialties","search_filter","user_information","componentDidMount","componentWillUnmount","render","serviceKeywords","filteredServices","filter","service","service_name","toLowerCase","includes","map","service_id","toString","accreditationBoxes","accreditation","accreditation_id","accreditation_name","user_type","first_name","last_name","require","diploma","splicedDiplomas","certification","splicedCertifications","membership","splicedMemberships","mapStateToProps","isLoggedIn","userReducer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import \"./ProfileSetup.css\";\r\nimport React from \"react\";\r\nimport { Container, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomButton from \"../general-components/CustomButton\";\r\nimport swal from \"@sweetalert/with-react\";\r\nimport api from \"../../api/api\";\r\n\r\nclass ProfileSetup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      services: [],\r\n      accreditations: [],\r\n      specialties: [],\r\n      search_filter: \"\",\r\n\r\n      // Company Details States\r\n      company_name: \"\",\r\n      logo: \"\",\r\n      email: this.props.user_information.email,\r\n      phone: this.props.user_information.phone,\r\n      about: \"\",\r\n      country_name: \"New Zealand\",\r\n      city_name: \"\",\r\n      region_name: \"\",\r\n      building_number: \"\",\r\n      street: \"\",\r\n      suburb: \"\",\r\n      postal_code: \"\",\r\n      chosen_accreditation: [],\r\n      chosen_services: [],\r\n      cover_images: [],\r\n\r\n      // Practitioner (First Specialist) States\r\n      user_id: this.props.user_information.user_id,\r\n      profile_picture: \"\",\r\n      diplomas: [],\r\n      certifications: [],\r\n      memberships: [],\r\n      chosen_specialties: [],\r\n\r\n      // Temporary Practitioner Placeholders (Holding Diplomas, Certificates, and Memberships Data)\r\n      diploma_name: \"\",\r\n      diploma_time_taken: \"\",\r\n      certification_name: \"\",\r\n      certification_time_taken: \"\",\r\n      membership_name: \"\",\r\n      membership_website: \"\",\r\n    };\r\n    // Prevents Memory Leaks\r\n    this._isMounted = false;\r\n  }\r\n\r\n  // Function to Set the Checkboxes for Accredations and Services\r\n  setFormCheckboxes = async () => {\r\n    // Getting the Services and Regions JSON From the Server\r\n    const serviceResponse = await api.get(\"/lookup_services\");\r\n    const accreditationResponse = await api.get(\"/lookup_accreditation\");\r\n\r\n    // Setting the Services and Regions States\r\n    this._isMounted &&\r\n      this.setState({\r\n        services: serviceResponse.data.rows,\r\n        accreditations: accreditationResponse.data.rows,\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this._isMounted && this.setFormCheckboxes();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  // Function to check if the field is empty or not\r\n  checkField = (field, tag) => {\r\n    if (field !== \"\" || field) {\r\n      return tag;\r\n    }\r\n  };\r\n\r\n  // Function to Submit Register Form (Email, Password, First and Last name, Phone Number, Preferred Username)\r\n  onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let missingFields = [];\r\n\r\n    if (missingFields.length > 0) {\r\n      swal({\r\n        title: \"Unsuccessful!\",\r\n        text: `Missing Fields: ${missingFields.join(\", \")}`,\r\n        icon: \"error\",\r\n        buttons: [false, true],\r\n      });\r\n    } else {\r\n      let companyObject = {\r\n        // Company Details States\r\n        company_name: this.state.company_name,\r\n        subscription_id: this.props.location.state.subscription_id,\r\n        logo: this.state.logo,\r\n        email: this.state.email,\r\n        phone: this.state.phone,\r\n        about: this.state.about,\r\n        country_name: \"New Zealand\",\r\n        city_name: this.state.city_name,\r\n        region_name: this.state.region_name,\r\n        building_number: this.state.building_number,\r\n        street: this.state.street,\r\n        suburb: this.state.suburb,\r\n        postal_code: this.state.postal_code,\r\n        chosen_accreditation: this.state.chosen_accreditation,\r\n        chosen_services: this.state.chosen_services,\r\n        cover_images: this.state.cover_images,\r\n\r\n        // Practitioner (First Specialist) States\r\n        user_id: this.state.user_id,\r\n        profile_picture: this.state.profile_picture,\r\n        diplomas: this.state.diplomas,\r\n        certifications: this.state.certifications,\r\n        memberships: this.state.memberships,\r\n        chosen_specialties: this.state.chosen_specialties,\r\n      };\r\n\r\n      // Generate a Company\r\n      try {\r\n        const response = await api.post(\"/company\", companyObject);\r\n        console.log(response);\r\n      } catch (error) {\r\n        swal({\r\n          title: \"Database Error!\",\r\n          text: error?.response?.data || \"Unknown Error\",\r\n          icon: \"error\",\r\n          buttons: [false, true],\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handles Any Active Changes on the Form\r\n  formOnChangeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Updates the Sections of Files with Images (company logo, profile picture, and cover images)\r\n  onChangeImageHandler = async (e) => {\r\n    const target = e.target.id;\r\n    if (e.target.files[0]) {\r\n      const data = new FormData();\r\n      data.append(\"image\", e.target.files[0]);\r\n      const uploadResponse = await api.post(\r\n        \"/upload?user_id=\" + 8 + \"&folder=\" + e.target.id,\r\n        data\r\n      );\r\n\r\n      // let img = new Image();\r\n      // img.src = uploadResponse.data.fileName;\r\n      // src.onChange =\r\n      // console.log(img);\r\n      // if (img.width === 720 && img.height === 720) {\r\n      //   console.log(\"WORKED!\");\r\n      // } else {\r\n      //   console.log(\"ERROR!\" + img.width + \"|\" + img.height);\r\n      // }\r\n      if (target !== \"cover_images\") {\r\n        this.setState({\r\n          [target]: uploadResponse.data.fileName,\r\n        });\r\n        localStorage.setItem(\"logo\", uploadResponse.data.fileName);\r\n      } else {\r\n        this.setState({\r\n          cover_images: this.state.cover_images.concat([\r\n            uploadResponse.data.fileName,\r\n          ]),\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Adds a Specific Credential to the Array\r\n  addPractitionerCredential = (e, credential) => {\r\n    e.preventDefault();\r\n    let chosenCredentialObj = {};\r\n    let errorFlag = false;\r\n    let errorMessage = \"\";\r\n    switch (credential) {\r\n      case \"diplomas\":\r\n        if (\r\n          this.state.diploma_name === \"\" ||\r\n          !this.state.diploma_name ||\r\n          !this.state.diploma_name.replace(/\\s/g, \"\").length\r\n        ) {\r\n          // Unsuccessful Addition of Pracititoner Modal\r\n          errorMessage = \"Please input a Diploma\";\r\n          errorFlag = true;\r\n        } else {\r\n          chosenCredentialObj = {\r\n            diploma_name: this.state.diploma_name,\r\n            time_taken: this.state.diploma_time_taken,\r\n          };\r\n          this.setState({\r\n            diploma_name: \"\",\r\n            diploma_time_taken: \"\",\r\n          });\r\n        }\r\n        break;\r\n\r\n      case \"certifications\":\r\n        if (\r\n          this.state.certification_name === \"\" ||\r\n          !this.state.certification_name ||\r\n          !this.state.certification_name.replace(/\\s/g, \"\").length\r\n        ) {\r\n          // Unsuccessful Addition of Pracititoner Modal\r\n          errorMessage = \"Please input a Certification\";\r\n          errorFlag = true;\r\n        } else {\r\n          chosenCredentialObj = {\r\n            certification_name: this.state.certification_name,\r\n            time_taken: this.state.certification_time_taken,\r\n          };\r\n          this.setState({\r\n            certification_name: \"\",\r\n            certification_time_taken: \"\",\r\n          });\r\n        }\r\n        break;\r\n\r\n      case \"memberships\":\r\n        if (\r\n          this.state.membership_name === \"\" ||\r\n          !this.state.membership_name ||\r\n          !this.state.membership_name.replace(/\\s/g, \"\").length\r\n        ) {\r\n          // Unsuccessful Addition of Pracititoner Modal\r\n          errorMessage = \"Please input a Membership\";\r\n          errorFlag = true;\r\n        } else {\r\n          chosenCredentialObj = {\r\n            membership_name: this.state.membership_name,\r\n            website: this.state.membership_website,\r\n          };\r\n          this.setState({\r\n            membership_name: \"\",\r\n            membership_website: \"\",\r\n          });\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (!errorFlag) {\r\n      // Add to the List\r\n      this.setState({\r\n        [credential]: [...this.state[credential], chosenCredentialObj],\r\n      });\r\n    } else {\r\n      swal({\r\n        title: \"Unsuccessful!\",\r\n        text: errorMessage,\r\n        icon: \"error\",\r\n        buttons: [false, true],\r\n      });\r\n    }\r\n  };\r\n\r\n  // Handles The Services/Accredation Checkboxes on the Form\r\n  checkboxOnChangeHandler = (event, serviceType) => {\r\n    // Array of Currently Chosen Services/Accredation\r\n    let chosen_services_list = this.state[serviceType];\r\n    let check = event.target.checked;\r\n    let checked_service = event.target.value;\r\n\r\n    if (check) {\r\n      // Add the value of the checkbox to chosen services/accreditation array\r\n      chosen_services_list.push(checked_service);\r\n    } else {\r\n      // Update the state with the new array of services/accreditation\r\n      var index = chosen_services_list.indexOf(checked_service);\r\n      if (index > -1) {\r\n        chosen_services_list.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    // Update the Services Array State\r\n    this.setState({\r\n      [serviceType]: chosen_services_list,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // Map the dropdown items of Services\r\n    let serviceKeywords = [];\r\n    if (this.state.services) {\r\n      let filteredServices = this.state.services;\r\n      if (this.state.search_filter && this.state.search_filter !== \"\") {\r\n        filteredServices = this.state.services.filter((service) => {\r\n          return service.service_name\r\n            .toLowerCase()\r\n            .includes(this.state.search_filter.toLowerCase());\r\n        });\r\n      }\r\n      serviceKeywords = filteredServices.map((service) => {\r\n        let check = this.state.chosen_services.indexOf(\r\n          service.service_id.toString()\r\n        );\r\n        return (\r\n          <label\r\n            id={`service-${service.service_id}`}\r\n            key={service.service_id}\r\n            className=\"serviceContainer container\"\r\n          >\r\n            {service.service_name}\r\n            <input\r\n              type=\"checkbox\"\r\n              name={service.service_name}\r\n              value={service.service_id}\r\n              checked={check !== -1}\r\n              onChange={(e) => {\r\n                this.checkboxOnChangeHandler(e, \"chosen_services\");\r\n              }}\r\n            />\r\n            <span className=\"checkBoxFill\"></span>\r\n          </label>\r\n        );\r\n      });\r\n    }\r\n    // Map the checkboxes of accreditations\r\n    let accreditationBoxes = [];\r\n    if (this.state.accreditations) {\r\n      accreditationBoxes = this.state.accreditations.map((accreditation) => {\r\n        return (\r\n          <label\r\n            id={`accreditation-${accreditation.accreditation_id}`}\r\n            key={accreditation.accreditation_id}\r\n            className=\"serviceContainer container\"\r\n          >\r\n            {accreditation.accreditation_name}\r\n            <input\r\n              type=\"checkbox\"\r\n              name={accreditation.accreditation_name}\r\n              value={accreditation.accreditation_id}\r\n              onChange={(e) => {\r\n                this.checkboxOnChangeHandler(e, \"chosen_accreditation\");\r\n              }}\r\n            />\r\n            <span className=\"checkBoxFill\"></span>\r\n          </label>\r\n        );\r\n      });\r\n    }\r\n\r\n    // Redirect to home if logged in\r\n    if (this.props.user_information.user_type === \"practitioner\") {\r\n      return <Redirect to=\"home\" />;\r\n    }\r\n    return (\r\n      <Container className=\"profileSetupStyle\">\r\n        {/** Profile Setup Header  */}\r\n        <h2>Profile Set-up</h2>\r\n        <h5>\r\n          Great, now that you are one of Us, we want to get you started in the\r\n          best possible way.\r\n        </h5>\r\n        <p>\r\n          So before you get started, ensure you check out our{\" \"}\r\n          <span>\r\n            <u>how-to-guide</u>\r\n          </span>{\" \"}\r\n          we've put together for you on how to showcase your business as it\r\n          provides you with templates and information so you can put your best\r\n          foot forward.\r\n        </p>\r\n        <span>\r\n          <u>Download profile how-to-guide</u>\r\n        </span>\r\n        <hr size=\"50\" />\r\n        <Form onSubmit={this.onSubmit}>\r\n          <h5>Your Company Name</h5>\r\n          {/** Company Name Form Group */}\r\n          <Form.Group controlId=\"company_name\">\r\n            <Form.Label>\r\n              This is the name that gets highlighted on your We are Us page.\r\n            </Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Enter Company Name\"\r\n              onChange={this.formOnChangeHandler}\r\n            />\r\n          </Form.Group>\r\n          <hr size=\"50\" />\r\n          <h5>Your Contact Details</h5>\r\n          <Row>\r\n            <Col>\r\n              {/** First Name Form Group */}\r\n              <Form.Group controlId=\"first_name\">\r\n                <Form.Label>Your First Name:</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Enter First Name\"\r\n                  defaultValue={this.props.user_information.first_name}\r\n                  onChange={this.formOnChangeHandler}\r\n                  readOnly\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              {/** Last Name Form Group */}\r\n              <Form.Group controlId=\"last_name\">\r\n                <Form.Label>Your Last Name:</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Last Name\"\r\n                  defaultValue={this.props.user_information.last_name}\r\n                  onChange={this.formOnChangeHandler}\r\n                  readOnly\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              {/** Contact Number Form Group */}\r\n              <Form.Group controlId=\"phone\">\r\n                <Form.Label>Your Company's Contact Phone Number:</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"number\"\r\n                  defaultValue={this.state.phone}\r\n                  placeholder=\"Enter Contact Number\"\r\n                  onChange={this.formOnChangeHandler}\r\n                  // readOnly={this.props.location.state.phone ? true : false}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              {/** Contact Email Form Group */}\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Your Company's Contact Email:</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"email\"\r\n                  defaultValue={this.state.email}\r\n                  placeholder=\"Enter Email\"\r\n                  onChange={this.formOnChangeHandler}\r\n                  // readOnly={this.props.location.state.email ? true : false}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              {/** Building Name/Number Form Group */}\r\n              <Form.Group controlId=\"building_number\">\r\n                <Form.Label>Building Name/Number:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Building Name/Number\"\r\n                  onChange={this.formOnChangeHandler}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              {/** Contact Email Form Group */}\r\n              <Form.Group controlId=\"street\">\r\n                <Form.Label>Street:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Street\"\r\n                  onChange={this.formOnChangeHandler}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={6}>\r\n              {/** City Form Group */}\r\n              <Form.Group controlId=\"region_name\">\r\n                <Form.Label>Region:</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Region\"\r\n                  onChange={this.formOnChangeHandler}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={6}>\r\n              {/** City Form Group */}\r\n              <Form.Group controlId=\"city_name\">\r\n                <Form.Label>City:</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Enter City\"\r\n                  onChange={this.formOnChangeHandler}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              {/** Town/Suburb Form Group */}\r\n              <Form.Group controlId=\"suburb\">\r\n                <Form.Label>Town/Suburb:</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Town/Suburb\"\r\n                  onChange={this.formOnChangeHandler}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              {/** Postcode Form Group */}\r\n              <Form.Group controlId=\"postal_code\">\r\n                <Form.Label>Postcode:</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Enter Postcode\"\r\n                  onChange={this.formOnChangeHandler}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <hr size=\"50\" />\r\n          <h5>Your Logo</h5>\r\n          {/** Logo Form Group */}\r\n          <Form.Group controlId=\"logo\">\r\n            <Form.Label>Size: 720px wide by 720px high</Form.Label>\r\n            <br />\r\n            {this.state.logo ? (\r\n              <div>\r\n                <img alt=\"company-logo\" src={this.state.logo}></img>\r\n                <br />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <img\r\n                  alt=\"company-logo-placeholder\"\r\n                  src={require(\"../../assets/images/placeholders/logo_placeholder.PNG\")}\r\n                ></img>\r\n                <br />\r\n              </div>\r\n            )}\r\n            {/** Upload Logo */}\r\n            <label className=\"custom-file-upload\">\r\n              <input\r\n                id=\"logo\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                name=\"logo\"\r\n                onChange={(e) => {\r\n                  this.onChangeImageHandler(e);\r\n                }}\r\n              />\r\n              <u>Change Image</u>\r\n            </label>\r\n          </Form.Group>\r\n          <hr size=\"50\" />\r\n          <h5>Your Profile Image</h5>\r\n          {/** Profile Image Form Group */}\r\n          <Form.Group controlId=\"profile_picture\">\r\n            <Form.Label>\r\n              This is where you put your headshot so people can put a face to a\r\n              name. <br />\r\n              Size: 720px wide by 720px high\r\n            </Form.Label>\r\n            <br />\r\n            {this.state.profile_picture ? (\r\n              <div className=\"mt-2\">\r\n                <img alt=\"profile-pic\" src={this.state.profile_picture}></img>\r\n                <br />\r\n              </div>\r\n            ) : (\r\n              <div className=\"mt-2\">\r\n                <img\r\n                  alt=\"profile-pic-placeholder\"\r\n                  src={require(\"../../assets/images/placeholders/profile_picture_placeholder.PNG\")}\r\n                ></img>\r\n                <br />\r\n              </div>\r\n            )}\r\n            {/** Upload Profile Image */}\r\n            <label className=\"custom-file-upload\">\r\n              <input\r\n                id=\"profile_picture\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={(e) => {\r\n                  this.onChangeImageHandler(e, false);\r\n                }}\r\n              />\r\n              <u>Change Image</u>\r\n            </label>\r\n          </Form.Group>\r\n          <hr size=\"50\" />\r\n          <div>{this.state.cover_images.toString()}</div>\r\n          <h5>Your Cover Image</h5>\r\n          {/** Cover Image Form Group */}\r\n          <Form.Group controlId=\"cover_images\">\r\n            <Form.Label>\r\n              Remember your photo is what people see first. In a blink of an eye\r\n              they'll make a decision about your business, so make sure all\r\n              images show trust, confidence, professionalism, and personality.\r\n              Size: 1440px wide by 520px high (this ensures faster loading of\r\n              your listing)\r\n            </Form.Label>\r\n            <Row>\r\n              <Col>\r\n                <br />\r\n                {/** Upload Cover Image */}\r\n                <label className=\"custom-file-upload\">\r\n                  <input\r\n                    id=\"cover_images\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={(e) => {\r\n                      this.onChangeImageHandler(e, true);\r\n                    }}\r\n                  />\r\n                  <u>Change Image</u>\r\n                </label>\r\n              </Col>\r\n              <Col></Col>\r\n            </Row>\r\n          </Form.Group>\r\n          <hr size=\"50\" />\r\n          <h5>About your Practice</h5>\r\n          {/** About Practice Form Group */}\r\n          <Form.Group controlId=\"about\">\r\n            <Form.Label>\r\n              First impressions count. The first 120 characters, or about 20\r\n              words, is what shows if you're featured on the home page after\r\n              launch, and on your profile page the first 70 words of the first\r\n              paragraph are shown on your listing. The best length for your copy\r\n              is the time it takes to get your key message across.\r\n            </Form.Label>\r\n            <Form.Control\r\n              required\r\n              as=\"textarea\"\r\n              rows=\"5\"\r\n              onChange={this.formOnChangeHandler}\r\n            />\r\n          </Form.Group>\r\n          <hr size=\"50\" />\r\n          <h5>Your Services</h5>\r\n          {/** Accredation Services Form Group */}\r\n          <Form.Group controlId=\"profileSetupAccredation\">\r\n            {accreditationBoxes}\r\n          </Form.Group>\r\n          {/** Practitioner's Services Form Group */}\r\n          <Form.Group controlId=\"search_filter\">\r\n            {/* {this.state.chosen_services &&\r\n              this.state.chosen_services.map((chosen_id, index) => {\r\n                let result = this.state.services.find((service) => {\r\n                  return service.service_id === chosen_id;\r\n                });\r\n                console.log(this.state.services);\r\n                console.log(result);\r\n                if (result) {\r\n                  return (\r\n                    <span className=\"service-box\" key={`${index}-${chosen_id}`}>\r\n                      {result}YEET\r\n                    </span>\r\n                  );\r\n                }\r\n              })} */}\r\n            <br />\r\n            <Form.Label>Search Service:</Form.Label>\r\n            <Form.Control\r\n              className=\"mb-3\"\r\n              type=\"text\"\r\n              placeholder=\"Begin typing your service eg. Acupuncture...\"\r\n              onChange={this.formOnChangeHandler}\r\n            />\r\n            <Form.Label>Or select from the following list:</Form.Label>\r\n            <Container className=\"checkboxContainerList\">\r\n              {serviceKeywords}\r\n            </Container>\r\n          </Form.Group>\r\n          {/** Other Practitioner's Services Form Group */}\r\n          <Form.Group controlId=\"profileSetupOtherServices\">\r\n            <Form.Label>Other:</Form.Label>\r\n            <Form.Control type=\"text\" />\r\n          </Form.Group>\r\n          <hr size=\"50\" />\r\n          <h5>Training, Qualifications, & Memberships</h5>\r\n          <h6>A note about what this is and how many words.</h6>\r\n          {/** Practitioner's Qualifications - Practitioner Diplomas Form Group */}\r\n          <Form.Group controlId=\"diploma_name\">\r\n            <Form.Label className=\"qualificationLabel\">\r\n              <img\r\n                alt=\"Graduation Hat\"\r\n                src={require(\"../../assets/icons/icon_diploma.svg\")}\r\n              />\r\n              My Diplomas\r\n            </Form.Label>\r\n            <span\r\n              className=\"addAnotherIcon\"\r\n              onClick={(e) => {\r\n                this.addPractitionerCredential(e, \"diplomas\");\r\n              }}\r\n            >\r\n              <img\r\n                src={require(\"../../assets/icons/plus_circle_fill.svg\")}\r\n                alt=\"plus_circle_fill\"\r\n              />\r\n              <u>Add another</u>\r\n            </span>\r\n            {/** Render Created Diplomas */}\r\n            {this.state.diplomas &&\r\n              this.state.diplomas.map((diploma, index) => {\r\n                return (\r\n                  <div\r\n                    className=\"customTrainingStyle\"\r\n                    key={`${index}-${diploma.diploma_name}`}\r\n                  >\r\n                    <Row>\r\n                      <Col sm={11}>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder={`${diploma.diploma_name} ${\r\n                            diploma.time_taken && \"(\" + diploma.time_taken + \")\"\r\n                          }`}\r\n                          readOnly\r\n                        />\r\n                      </Col>\r\n                      <Col sm={1}>\r\n                        <CustomButton\r\n                          text=\"x\"\r\n                          onClick={() => {\r\n                            let splicedDiplomas = this.state.diplomas;\r\n                            splicedDiplomas.splice(index, 1);\r\n                            this.setState({\r\n                              diplomas: splicedDiplomas,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                );\r\n              })}\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"3\"\r\n              value={this.state.diploma_name}\r\n              onChange={this.formOnChangeHandler}\r\n            />\r\n          </Form.Group>\r\n          {/** Practitioner's Qualifications - Practitioner Diploma/Training Time Form Group */}\r\n          <Form.Group controlId=\"diploma_time_taken\">\r\n            <Form.Label>Time taken to complete training (optional)</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={this.state.diploma_time_taken}\r\n              onChange={this.formOnChangeHandler}\r\n            />\r\n          </Form.Group>\r\n          {/** Practitioner's Qualifications - Practitioner Certificates Form Group */}\r\n          <Form.Group controlId=\"certification_name\">\r\n            <Form.Label className=\"qualificationLabel\">\r\n              <img\r\n                alt=\"Certificate Ribbon\"\r\n                src={require(\"../../assets/icons/icon_certificate.svg\")}\r\n              />\r\n              My Certificates\r\n            </Form.Label>\r\n            <span\r\n              className=\"addAnotherIcon\"\r\n              onClick={(e) => {\r\n                this.addPractitionerCredential(e, \"certifications\");\r\n              }}\r\n            >\r\n              <img\r\n                src={require(\"../../assets/icons/plus_circle_fill.svg\")}\r\n                alt=\"plus_circle_fill\"\r\n              />\r\n              <u>Add another</u>\r\n            </span>\r\n            {/** Render Created Certifications */}\r\n            {this.state.certifications &&\r\n              this.state.certifications.map((certification, index) => {\r\n                return (\r\n                  <div\r\n                    className=\"customTrainingStyle\"\r\n                    key={`${index}-${certification.certification_name}`}\r\n                  >\r\n                    <Row>\r\n                      <Col sm={11}>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder={`${certification.certification_name} ${\r\n                            certification.time_taken &&\r\n                            \"(\" + certification.time_taken + \")\"\r\n                          }`}\r\n                          readOnly\r\n                        />\r\n                      </Col>\r\n                      <Col sm={1}>\r\n                        <CustomButton\r\n                          text=\"-\"\r\n                          onClick={() => {\r\n                            let splicedCertifications = this.state\r\n                              .certifications;\r\n                            splicedCertifications.splice(index, 1);\r\n                            this.setState({\r\n                              certifications: splicedCertifications,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                );\r\n              })}\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"3\"\r\n              value={this.state.certification_name}\r\n              onChange={this.formOnChangeHandler}\r\n            />\r\n          </Form.Group>\r\n          {/** Practitioner's Qualifications - Practitioner Diploma/Training Time Form Group */}\r\n          <Form.Group controlId=\"certification_time_taken\">\r\n            <Form.Label>Time taken to complete training (optional)</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={this.state.certification_time_taken}\r\n              onChange={this.formOnChangeHandler}\r\n            />\r\n          </Form.Group>\r\n          {/** Practitioner's Qualifications - Practitioner Memberships Form Group */}\r\n          <Form.Group controlId=\"membership_name\">\r\n            <Form.Label className=\"qualificationLabel\">\r\n              <img\r\n                alt=\"Membership Group\"\r\n                src={require(\"../../assets/icons/icon_memberships.svg\")}\r\n              />\r\n              My Memberships\r\n            </Form.Label>\r\n            <span\r\n              className=\"addAnotherIcon\"\r\n              onClick={(e) => {\r\n                this.addPractitionerCredential(e, \"memberships\");\r\n              }}\r\n            >\r\n              <img\r\n                src={require(\"../../assets/icons/plus_circle_fill.svg\")}\r\n                alt=\"plus_circle_fill\"\r\n              />\r\n              <u>Add another</u>\r\n            </span>\r\n\r\n            {/** Render Created Certifications */}\r\n            {this.state.memberships &&\r\n              this.state.memberships.map((membership, index) => {\r\n                return (\r\n                  <div\r\n                    className=\"customTrainingStyle\"\r\n                    key={`${index}-${membership.membership_name}`}\r\n                  >\r\n                    <Row>\r\n                      <Col sm={11}>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder={`${membership.membership_name} ${\r\n                            membership.website && \"(\" + membership.website + \")\"\r\n                          }`}\r\n                          readOnly\r\n                        />\r\n                      </Col>\r\n                      <Col sm={1}>\r\n                        <CustomButton\r\n                          text=\"-\"\r\n                          onClick={() => {\r\n                            let splicedMemberships = this.state.memberships;\r\n                            splicedMemberships.splice(index, 1);\r\n                            this.setState({\r\n                              memberships: splicedMemberships,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                );\r\n              })}\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"3\"\r\n              value={this.state.membership_name}\r\n              onChange={this.formOnChangeHandler}\r\n            />\r\n          </Form.Group>\r\n          {/** Practitioner's Qualifications - Practitioner Website Form Group */}\r\n          <Form.Group controlId=\"membership_website\">\r\n            <Form.Label>Website (optional)</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"http://\"\r\n              value={this.state.membership_website}\r\n              onChange={this.formOnChangeHandler}\r\n            />\r\n          </Form.Group>\r\n          {/** Save Profile Button */}\r\n          <CustomButton id=\"saveProfileButton\" type=\"submit\" text=\"Save\" />\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.userReducer.isLoggedIn,\r\n  user_information: state.userReducer.user_information,\r\n});\r\n\r\nconst mapDispatchToProps = () => {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps())(ProfileSetup);\r\n"]},"metadata":{},"sourceType":"module"}