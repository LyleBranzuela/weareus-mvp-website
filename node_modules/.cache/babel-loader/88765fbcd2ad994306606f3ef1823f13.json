{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\School Stuff\\\\Year 3\\\\Research and Development Part 2\\\\weareus-mvp-website\\\\src\\\\components\\\\practitionerprofile-components\\\\ProfileInformation.js\";\nimport React from \"react\";\nimport \"./ProfileInformation.css\";\nimport icon_diploma from \"../../assets/icons/icon_diploma.svg\";\nimport icon_certificate from \"../../assets/icons/icon_certificate.svg\";\nimport icon_memberships from \"../../assets/icons/icon_memberships.svg\";\nimport icon_accordion_arrow from \"../../assets/icons/accordion_arrow.svg\";\nimport { Container, Row, Col, Accordion, Card } from \"react-bootstrap\";\nimport ContactCard from \"./ContactCard\";\nimport ExpendableText from \"./ExpendableText\";\nimport api from \"../../api/api\";\n\nclass ProfileInformation extends React.Component {\n  constructor() {\n    super();\n\n    this.getSpecialistDetails = async () => {\n      const specialistResponse = await api.get(`/specialist-profile/${this.props.specialists[0]}`); // Setting the Specialists's Detail State\n\n      this._isMounted && this.setState({\n        onlySpecialist: specialistResponse.data\n      });\n      console.log(this.props);\n      console.log(specialistResponse);\n    };\n\n    this.state = {\n      onlySpecialist: \"\"\n    }; // Prevents Memory Leaks\n\n    this._isMounted = false;\n  } // Gets the Specialist Details from the Server\n\n\n  componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.getSpecialistDetails();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  } // Update Search whenever the URL is changed\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.specialists !== prevProps.specialists) {\n      this.getSpecialistDetails();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"container-dimensions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 8,\n      className: \"no-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"practitioner-profile\",\n      src: require(\"../../assets/images/placeholders/prac_profile_placeholder.jpg\"),\n      id: \"profile-image-frame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"practitioner-title\",\n      id: \"practitioner-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, this.props.company_name, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.logo,\n      alt: \"logo\",\n      className: \"practitioner-logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"category-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, this.state.onlySpecialist.specialty && this.state.onlySpecialist.specialty.map((specialty, index) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: specialty.specialty_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, index < this.state.onlySpecialist.specialty.length - 1 ? specialty.specialty_name + \", \" : specialty.specialty_name);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"suburb-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, this.props.suburb, \",\"), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"city-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, \" \", this.props.city)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), this.props.accreditations && this.props.accreditations.map((accreditation, index) => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"box\",\n        key: `${index}-${accreditation.accreditation_id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, accreditation.accreditation_name);\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"practitioner-name\",\n      id: \"person-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, this.state.onlySpecialist.first_name, \" \", this.state.onlySpecialist.last_name)), /*#__PURE__*/React.createElement(Col, {\n      lg: 4,\n      className: \"contact-card-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ContactCard, {\n      first_name: this.state.onlySpecialist.specialist_first_name,\n      last_name: this.state.onlySpecialist.specialist_last_name,\n      company_name: this.props.company_name,\n      company_address1: this.props.company_address1,\n      company_address2: this.props.company_address2,\n      phone: this.props.phone,\n      email: this.props.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 8,\n      className: \"no-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"practitioner-description-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \"About\"), /*#__PURE__*/React.createElement(ExpendableText, {\n      maxHeight: 145,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, this.props.about))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"accordion-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      defaultationkey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, \"Specialties\", /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"accordion_arrow\",\n      src: icon_accordion_arrow,\n      className: \"arrow-position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"accordion-content-list-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 23\n      }\n    }, this.state.onlySpecialist.specialty && this.state.onlySpecialist.specialty.map((specialty, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: `${index}-${specialty.specialty_id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 35\n        }\n      }, specialty.specialty_name));\n    }))))), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }, \"Services\", /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"accordion_arrow\",\n      src: icon_accordion_arrow,\n      className: \"arrow-position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"accordion-content-list-style\",\n      id: \"services\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }, this.props.services && this.props.services.map((service, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: `${index}-${service}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 33\n        }\n      }, service.service_name));\n    }))))), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, \"Training, Qualifications & Memberships\", /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"accordion_arrow\",\n      src: icon_accordion_arrow,\n      className: \"arrow-position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"title-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"accordion_diploma\",\n      src: icon_diploma,\n      style: {\n        paddingRight: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }), \"Diplomas\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font-body\",\n      id: \"education\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"training-accordion-body-font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }, this.state.onlySpecialist.diplomas && this.state.onlySpecialist.diplomas.map(training => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: training.diploma_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 35\n        }\n      }, training.diploma_name, \" \", training.time_taken && `(${training.time_taken})`);\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"title-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"accordion_certificate\",\n      src: icon_certificate,\n      style: {\n        paddingRight: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }), \"Certificates\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"training-accordion-body-font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 23\n      }\n    }, this.state.onlySpecialist.certification && this.state.onlySpecialist.certification.map(training => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: training.certification_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 33\n        }\n      }, training.certification_name, \" \", training.time_taken && `(${training.time_taken})`);\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"title-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"accordion_memberships\",\n      src: icon_memberships,\n      style: {\n        paddingRight: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 25\n      }\n    }), \"Memberships\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font-body\",\n      id: \"memberships\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 23\n      }\n    }, this.state.onlySpecialist.membership && this.state.onlySpecialist.membership.map(training => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: training.membership_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 33\n        }\n      }, !training.website ? /*#__PURE__*/React.createElement(\"span\", {\n        href: \"/#\",\n        id: \"membership-no-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 37\n        }\n      }, training.membership_name) :\n      /*#__PURE__*/\n\n      /* SHOW LINK - IF the website is given */\n      React.createElement(\"a\", {\n        href: `${training.website}`,\n        style: {\n          color: \"#79158f\"\n        },\n        className: \"membership-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"u\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 39\n        }\n      }, training.membership_name)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 35\n        }\n      }));\n    }))))))))));\n  }\n\n}\n\nexport default ProfileInformation;","map":{"version":3,"sources":["C:/Users/admin/Downloads/School Stuff/Year 3/Research and Development Part 2/weareus-mvp-website/src/components/practitionerprofile-components/ProfileInformation.js"],"names":["React","Container","Row","Col","Accordion","Card","ContactCard","ExpendableText","api","ProfileInformation","Component","constructor","getSpecialistDetails","specialistResponse","get","props","specialists","_isMounted","setState","onlySpecialist","data","console","log","state","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","render","require","company_name","logo","specialty","map","index","specialty_id","length","specialty_name","suburb","city","accreditations","accreditation","accreditation_id","accreditation_name","first_name","last_name","specialist_first_name","specialist_last_name","company_address1","company_address2","phone","email","about","Header","icon_accordion_arrow","services","service","service_name","icon_diploma","paddingRight","diplomas","training","diploma_id","diploma_name","time_taken","icon_certificate","certification","certification_id","certification_name","icon_memberships","membership","membership_id","website","membership_name","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./ProfileInformation.css\";\r\nimport icon_diploma from \"../../assets/icons/icon_diploma.svg\";\r\nimport icon_certificate from \"../../assets/icons/icon_certificate.svg\";\r\nimport icon_memberships from \"../../assets/icons/icon_memberships.svg\";\r\nimport icon_accordion_arrow from \"../../assets/icons/accordion_arrow.svg\";\r\nimport { Container, Row, Col, Accordion, Card } from \"react-bootstrap\";\r\nimport ContactCard from \"./ContactCard\";\r\nimport ExpendableText from \"./ExpendableText\";\r\nimport api from \"../../api/api\";\r\n\r\nclass ProfileInformation extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      onlySpecialist: \"\",\r\n    };\r\n\r\n    // Prevents Memory Leaks\r\n    this._isMounted = false;\r\n  }\r\n\r\n  // Gets the Specialist Details from the Server\r\n  getSpecialistDetails = async () => {\r\n    const specialistResponse = await api.get(\r\n      `/specialist-profile/${this.props.specialists[0]}`\r\n    );\r\n    // Setting the Specialists's Detail State\r\n    this._isMounted &&\r\n      this.setState({\r\n        onlySpecialist: specialistResponse.data,\r\n      });\r\n    console.log(this.props);\r\n    console.log(specialistResponse);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this._isMounted && this.getSpecialistDetails();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  // Update Search whenever the URL is changed\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.specialists !== prevProps.specialists) {\r\n      this.getSpecialistDetails();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"container-dimensions\">\r\n        <Row>\r\n          <Col lg={8} className=\"no-padding\">\r\n            {/* Practitioner Profile Image */}\r\n            <img\r\n              alt=\"practitioner-profile\"\r\n              src={require(\"../../assets/images/placeholders/prac_profile_placeholder.jpg\")}\r\n              id=\"profile-image-frame\"\r\n            />\r\n            {/* Practitioner Profile Image */}\r\n            {/* <img\r\n              alt=\"practitioner-profile\"\r\n              src={this.onlySpecialist.profile_image_url}\r\n              id=\"profile-image-frame\"\r\n            /> */}\r\n\r\n            {/* Practitioner Name */}\r\n            <h2 className=\"practitioner-title\" id=\"practitioner-name\">\r\n              {this.props.company_name}\r\n              {/* Practitioner Business Logo Image */}\r\n              <img\r\n                src={this.props.logo}\r\n                alt=\"logo\"\r\n                className=\"practitioner-logo\"\r\n              />\r\n            </h2>\r\n            {/* Practitioner Specialty Category/ies */}\r\n            <div id=\"category\">\r\n              <span id=\"category-text\">\r\n                {this.state.onlySpecialist.specialty &&\r\n                  this.state.onlySpecialist.specialty.map(\r\n                    (specialty, index) => {\r\n                      return (\r\n                        <span key={specialty.specialty_id}>\r\n                          {index <\r\n                          this.state.onlySpecialist.specialty.length - 1\r\n                            ? specialty.specialty_name + \", \"\r\n                            : specialty.specialty_name}\r\n                        </span>\r\n                      );\r\n                    }\r\n                  )}\r\n              </span>\r\n            </div>\r\n\r\n            {/* Location including Suburb and City*/}\r\n            <div id=\"location\">\r\n              <span id=\"suburb-profile\">{this.props.suburb},</span>\r\n              <span id=\"city-profile\"> {this.props.city}</span>\r\n            </div>\r\n            <br />\r\n            {this.props.accreditations &&\r\n              this.props.accreditations.map((accreditation, index) => {\r\n                return (\r\n                  <p\r\n                    className=\"box\"\r\n                    key={`${index}-${accreditation.accreditation_id}`}\r\n                  >\r\n                    {accreditation.accreditation_name}\r\n                  </p>\r\n                );\r\n              })}\r\n            <h5 className=\"practitioner-name\" id=\"person-name\">\r\n              {this.state.onlySpecialist.first_name}{\" \"}\r\n              {this.state.onlySpecialist.last_name}\r\n            </h5>\r\n          </Col>\r\n          {/* Contact card column */}\r\n          <Col lg={4} className=\"contact-card-column\">\r\n            <ContactCard\r\n              first_name={this.state.onlySpecialist.specialist_first_name}\r\n              last_name={this.state.onlySpecialist.specialist_last_name}\r\n              company_name={this.props.company_name}\r\n              company_address1={this.props.company_address1}\r\n              company_address2={this.props.company_address2}\r\n              phone={this.props.phone}\r\n              email={this.props.email}\r\n            ></ContactCard>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={8} className=\"no-padding\">\r\n            {/* Practitioner \"About\" Section*/}\r\n\r\n            {/* Read More button for practitioner description */}\r\n            <Card className=\"practitioner-description-card\">\r\n              <Card.Body>\r\n                <Card.Title>About</Card.Title>\r\n                {/* Max Height by default is 145 */}\r\n                {/* maxHeight will determine how much text is shown in the description */}\r\n                {/* IF a description is longer than the height of the Card THEN a \"Read More\" button will appear */}\r\n                <ExpendableText maxHeight={145}>\r\n                  {this.props.about}\r\n                </ExpendableText>\r\n              </Card.Body>\r\n            </Card>\r\n            {/* END OF practitioner \"About\" Section */}\r\n\r\n            {/* START OF Accordion Section */}\r\n            <Container fluid className=\"accordion-section\">\r\n              <Accordion defaultationkey=\"0\">\r\n                {/* Specialties Accordion */}\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                    Specialties\r\n                    <img\r\n                      alt=\"accordion_arrow\"\r\n                      src={icon_accordion_arrow}\r\n                      className=\"arrow-position\"\r\n                    ></img>\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    {/* Section containing Specialty categories */}\r\n                    <Card.Body>\r\n                      <ul className=\"accordion-content-list-style\">\r\n                        {this.state.onlySpecialist.specialty &&\r\n                          this.state.onlySpecialist.specialty.map(\r\n                            (specialty, index) => {\r\n                              return (\r\n                                <li key={`${index}-${specialty.specialty_id}`}>\r\n                                  <h5>{specialty.specialty_name}</h5>\r\n                                </li>\r\n                              );\r\n                            }\r\n                          )}\r\n                      </ul>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n                {/* END of Specialties section */}\r\n\r\n                {/* Services Accordion */}\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                    Services\r\n                    <img\r\n                      alt=\"accordion_arrow\"\r\n                      src={icon_accordion_arrow}\r\n                      className=\"arrow-position\"\r\n                    ></img>\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body>\r\n                      <ul\r\n                        className=\"accordion-content-list-style\"\r\n                        id=\"services\"\r\n                      >\r\n                        {this.props.services &&\r\n                          this.props.services.map((service, index) => {\r\n                            return (\r\n                              <li key={`${index}-${service}`}>\r\n                                <h5>{service.service_name}</h5>\r\n                              </li>\r\n                            );\r\n                          })}\r\n                      </ul>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n\r\n                {/* Training, Qualifications & Memberships Accordion */}\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n                    Training, Qualifications & Memberships\r\n                    <img\r\n                      alt=\"accordion_arrow\"\r\n                      src={icon_accordion_arrow}\r\n                      className=\"arrow-position\"\r\n                    ></img>\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"2\">\r\n                    {/* Education (Diploma) sub-section */}\r\n                    <Card.Body>\r\n                      <h6 className=\"title-header\">\r\n                        <img\r\n                          alt=\"accordion_diploma\"\r\n                          src={icon_diploma}\r\n                          style={{ paddingRight: \"5px\" }}\r\n                        ></img>\r\n                        Diplomas\r\n                      </h6>\r\n                      <div className=\"font-body\" id=\"education\">\r\n                        {/* List of Diplomas */}\r\n                        <ul className=\"training-accordion-body-font\">\r\n                          {this.state.onlySpecialist.diplomas &&\r\n                            this.state.onlySpecialist.diplomas.map(\r\n                              (training) => {\r\n                                return (\r\n                                  <li key={training.diploma_id}>\r\n                                    {training.diploma_name}{\" \"}\r\n                                    {training.time_taken &&\r\n                                      `(${training.time_taken})`}\r\n                                  </li>\r\n                                );\r\n                              }\r\n                            )}\r\n                        </ul>\r\n                      </div>\r\n                      <br />\r\n                      {/* END OF Education (Diploma) section */}\r\n                      {/* Certifications sub-section */}\r\n                      <h6 className=\"title-header\">\r\n                        <img\r\n                          alt=\"accordion_certificate\"\r\n                          src={icon_certificate}\r\n                          style={{ paddingRight: \"5px\" }}\r\n                        ></img>\r\n                        Certificates\r\n                      </h6>\r\n                      {/* List of certifications achieved */}\r\n                      <ul className=\"training-accordion-body-font\">\r\n                        {this.state.onlySpecialist.certification &&\r\n                          this.state.onlySpecialist.certification.map(\r\n                            (training) => {\r\n                              return (\r\n                                <li key={training.certification_id}>\r\n                                  {training.certification_name}{\" \"}\r\n                                  {training.time_taken &&\r\n                                    `(${training.time_taken})`}\r\n                                </li>\r\n                              );\r\n                            }\r\n                          )}\r\n                      </ul>\r\n                      <br />\r\n                      {/* Memberships sub-section*/}\r\n                      <h6 className=\"title-header\">\r\n                        <img\r\n                          alt=\"accordion_memberships\"\r\n                          src={icon_memberships}\r\n                          style={{ paddingRight: \"5px\" }}\r\n                        ></img>\r\n                        Memberships\r\n                      </h6>\r\n                      <div className=\"font-body\" id=\"memberships\">\r\n                        {this.state.onlySpecialist.membership &&\r\n                          this.state.onlySpecialist.membership.map(\r\n                            (training) => {\r\n                              return (\r\n                                <div key={training.membership_id}>\r\n                                  {/* Show REGULAR TEXT - IF link is NOT given */}\r\n                                  {!training.website ? (\r\n                                    <span href=\"/#\" id=\"membership-no-link\">\r\n                                      {training.membership_name}\r\n                                    </span>\r\n                                  ) : (\r\n                                    /* SHOW LINK - IF the website is given */\r\n                                    <a\r\n                                      href={`${training.website}`}\r\n                                      style={{ color: \"#79158f\" }}\r\n                                      className=\"membership-link\"\r\n                                    >\r\n                                      <u>{training.membership_name}</u>\r\n                                    </a>\r\n                                  )}\r\n                                  <br />\r\n                                </div>\r\n                              );\r\n                            }\r\n                          )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileInformation;\r\n"]},"metadata":{},"sourceType":"module"}