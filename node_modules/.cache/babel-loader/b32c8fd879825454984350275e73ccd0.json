{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\School Stuff\\\\Year 3\\\\Research and Development Part 2\\\\weareus-mvp-website\\\\src\\\\components\\\\search-components\\\\SearchResults.js\";\nimport \"./SearchResults.css\";\nimport React from \"react\";\nimport SearchField from \"./SearchField\";\nimport CallToAction from \"../homepage-components/CallToAction\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport queryString from \"query-string\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../api/api\";\n\nclass SearchResults extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayResults = async e => {\n      const params = await queryString.parse(this.props.location.search); // Setting the SearchResults State\n\n      this._isMounted && this.setState({\n        searchPractitionerName: params.company_name,\n        searchService: params.service_name,\n        searchRegion: params.region_name\n      }); // If it's empty then clear it out for the database search\n\n      if (params.company_name === \"\") {\n        this.setState({\n          searchPractitionerName: \"Any Practitioners\"\n        });\n        params.company_name = \"\";\n      }\n\n      if (params.service_name === \"Any Therapy Type\" || params.service_name === \"\") {\n        this.setState({\n          searchService: \"Any Therapy Type\"\n        });\n        params.service_name = \"\";\n      }\n\n      if (params.region_name === \"Any Region\" || params.region_name === \"\") {\n        this.setState({\n          searchRegion: \"Any Region\"\n        });\n        params.region_name = \"\";\n      } // Getting the Services and Regions JSON From the Server\n\n\n      const searchResponse = await api.get(\"/search-practitioner/\", {\n        params: {\n          company_name: params.company_name,\n          service_name: params.service_name,\n          region_name: params.region_name\n        }\n      }); // Setting the SearchResults State\n\n      this._isMounted && this.setState({\n        searchResults: searchResponse.data.rows\n      });\n    };\n\n    this.state = {\n      // Search Keywords are for front end purposes\n      searchPractitionerName: \"\",\n      searchService: \"\",\n      searchRegion: \"\",\n      searchResults: []\n    }; // Prevents Memory Leaks\n\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.displayResults();\n  } // Update Search whenever the URL is changed\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.search !== prevProps.location.search) {\n      this.displayResults();\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    // Map all of the Practitioners\n    let searchResultsList = [];\n    let testString = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut ut\n    ex facilisis, faucibus erat et, faucibus sem. Cras tempus quam\n    quis risus interdum, sit amet accumsan felis lacinia.\n    Suspendisse eget venenatis erat, et ornare velit. Proin id\n    viverra neque. Suspendisse potenti. Vivamus vitae dolor\n    tristique, egestas est eleifend, laoreet mauris. Suspendisse\n    semper ligula eleifend varius pharetra. Integer vel tristique\n    nisi, vitae rhoncus augue. Curabitur at pharetra tortor.\n    Mauris elementum eleifend urna eu commodo. Vestibulum erat\n    quam, efficitur id tortor vel, sollicitudin viverra mauris.\n    Integer aliquet convallis diam, ultrices suscipit nisi\n    placerat sed. Integer lobortis urna eu nisi cursus, sit amet\n    accumsan neque tristique. Fusce tincidunt metus id placerat\n    congue. Praesent pretium augue eu vehicula dignissim.`;\n\n    if (this.state.searchResults) {\n      searchResultsList = this.state.searchResults.map(practitioner => {\n        // Temporary Image URL until S3 is setup\n        let image_url = \"listing_placeholder_2.jpg\";\n\n        if (!image_url) {\n          image_url = \"listing_placeholder_2.jpg\";\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: practitioner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Row, {\n          className: \"pracResultStyle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          className: \"pracResultImage\",\n          sm: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          alt: practitioner.company_name,\n          variant: \"top\",\n          src: require(\"../../assets/images/placeholders/\" + image_url),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          className: \"pracResultDetails\",\n          sm: 6,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: `/practitioner-profile/${practitioner.company_id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 19\n          }\n        }, practitioner.company_name)), /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }\n        }, `${practitioner.suburb}, ${practitioner.region_name}`), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"pracResultAbout\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }\n        }, practitioner.about ? practitioner.about.slice(0, 190) : testString.slice(0, 190), /*#__PURE__*/React.createElement(Link, {\n          to: `/practitioner-profile/${practitioner.company_id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }\n        }, \"...More\")))), /*#__PURE__*/React.createElement(Col, {\n          className: \"pracResultMoreDetails\",\n          sm: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }\n        }, \"Address:\"), \" \", `${practitioner.building_number}, ${practitioner.street},`, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }\n        }), `${practitioner.suburb}, ${practitioner.region_name} ${practitioner.postal_code}`), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }\n        }, \"Phone:\"), \" \", practitioner.phone), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"searchPhone\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }\n        }, practitioner.email))));\n      });\n    } // console.log(this.props.location.state.regions);\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchField, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      className: \"searchResultsStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"searchKeyTerms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, \"Search Result:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, this.state.searchPractitionerName, \" - \", this.state.searchService, \" -\", \" \", this.state.searchRegion)), searchResultsList), /*#__PURE__*/React.createElement(CallToAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default SearchResults;","map":{"version":3,"sources":["C:/Users/admin/Downloads/School Stuff/Year 3/Research and Development Part 2/weareus-mvp-website/src/components/search-components/SearchResults.js"],"names":["React","SearchField","CallToAction","Container","Col","Row","queryString","Link","api","SearchResults","Component","constructor","props","displayResults","e","params","parse","location","search","_isMounted","setState","searchPractitionerName","company_name","searchService","service_name","searchRegion","region_name","searchResponse","get","searchResults","data","rows","state","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","render","searchResultsList","testString","map","practitioner","image_url","require","company_id","suburb","about","slice","building_number","street","postal_code","phone","email"],"mappings":"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","sourcesContent":["import \"./SearchResults.css\";\r\nimport React from \"react\";\r\nimport SearchField from \"./SearchField\";\r\nimport CallToAction from \"../homepage-components/CallToAction\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport queryString from \"query-string\";\r\nimport { Link } from \"react-router-dom\";\r\nimport api from \"../../api/api\";\r\n\r\nclass SearchResults extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Search Keywords are for front end purposes\r\n      searchPractitionerName: \"\",\r\n      searchService: \"\",\r\n      searchRegion: \"\",\r\n      searchResults: [],\r\n    };\r\n\r\n    // Prevents Memory Leaks\r\n    this._isMounted = false;\r\n  }\r\n\r\n  displayResults = async (e) => {\r\n    const params = await queryString.parse(this.props.location.search);\r\n\r\n    // Setting the SearchResults State\r\n    this._isMounted &&\r\n      this.setState({\r\n        searchPractitionerName: params.company_name,\r\n        searchService: params.service_name,\r\n        searchRegion: params.region_name,\r\n      });\r\n\r\n    // If it's empty then clear it out for the database search\r\n    if (params.company_name === \"\") {\r\n      this.setState({\r\n        searchPractitionerName: \"Any Practitioners\",\r\n      });\r\n      params.company_name = \"\";\r\n    }\r\n    if (\r\n      params.service_name === \"Any Therapy Type\" ||\r\n      params.service_name === \"\"\r\n    ) {\r\n      this.setState({\r\n        searchService: \"Any Therapy Type\",\r\n      });\r\n      params.service_name = \"\";\r\n    }\r\n    if (params.region_name === \"Any Region\" || params.region_name === \"\") {\r\n      this.setState({\r\n        searchRegion: \"Any Region\",\r\n      });\r\n      params.region_name = \"\";\r\n    }\r\n\r\n    // Getting the Services and Regions JSON From the Server\r\n    const searchResponse = await api.get(\"/search-practitioner/\", {\r\n      params: {\r\n        company_name: params.company_name,\r\n        service_name: params.service_name,\r\n        region_name: params.region_name,\r\n      },\r\n    });\r\n\r\n    // Setting the SearchResults State\r\n    this._isMounted &&\r\n      this.setState({\r\n        searchResults: searchResponse.data.rows,\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this._isMounted && this.displayResults();\r\n  }\r\n\r\n  // Update Search whenever the URL is changed\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.search !== prevProps.location.search) {\r\n      this.displayResults();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    // Map all of the Practitioners\r\n    let searchResultsList = [];\r\n    let testString = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut ut\r\n    ex facilisis, faucibus erat et, faucibus sem. Cras tempus quam\r\n    quis risus interdum, sit amet accumsan felis lacinia.\r\n    Suspendisse eget venenatis erat, et ornare velit. Proin id\r\n    viverra neque. Suspendisse potenti. Vivamus vitae dolor\r\n    tristique, egestas est eleifend, laoreet mauris. Suspendisse\r\n    semper ligula eleifend varius pharetra. Integer vel tristique\r\n    nisi, vitae rhoncus augue. Curabitur at pharetra tortor.\r\n    Mauris elementum eleifend urna eu commodo. Vestibulum erat\r\n    quam, efficitur id tortor vel, sollicitudin viverra mauris.\r\n    Integer aliquet convallis diam, ultrices suscipit nisi\r\n    placerat sed. Integer lobortis urna eu nisi cursus, sit amet\r\n    accumsan neque tristique. Fusce tincidunt metus id placerat\r\n    congue. Praesent pretium augue eu vehicula dignissim.`;\r\n    if (this.state.searchResults) {\r\n      searchResultsList = this.state.searchResults.map((practitioner) => {\r\n        // Temporary Image URL until S3 is setup\r\n        let image_url = \"listing_placeholder_2.jpg\";\r\n        if (!image_url) {\r\n          image_url = \"listing_placeholder_2.jpg\";\r\n        }\r\n        return (\r\n          <div key={practitioner.company_name}>\r\n            <hr />\r\n            <Row className=\"pracResultStyle\">\r\n              <Col className=\"pracResultImage\" sm={3}>\r\n                <img\r\n                  alt={practitioner.company_name}\r\n                  variant=\"top\"\r\n                  src={require(\"../../assets/images/placeholders/\" + image_url)}\r\n                />\r\n              </Col>\r\n              <Col className=\"pracResultDetails\" sm={6}>\r\n                <Link to={`/practitioner-profile/${practitioner.company_id}`}>\r\n                  <h4>{practitioner.company_name}</h4>\r\n                </Link>\r\n                <h6>{`${practitioner.suburb}, ${practitioner.region_name}`}</h6>\r\n                {/* <p>{practitioner.about}</p> */}\r\n                <p className=\"pracResultAbout\">\r\n                  {practitioner.about\r\n                    ? practitioner.about.slice(0, 190)\r\n                    : testString.slice(0, 190)}\r\n                  <Link to={`/practitioner-profile/${practitioner.company_id}`}>\r\n                    <span>...More</span>\r\n                  </Link>\r\n                </p>\r\n              </Col>\r\n              <Col className=\"pracResultMoreDetails\" sm={3}>\r\n                <span>\r\n                  <strong>Address:</strong>{\" \"}\r\n                  {`${practitioner.building_number}, ${practitioner.street},`}\r\n                  <br />\r\n                  {`${practitioner.suburb}, ${practitioner.region_name} ${practitioner.postal_code}`}\r\n                </span>\r\n                <br />\r\n                <br />\r\n                <span>\r\n                  <strong>Phone:</strong> {practitioner.phone}\r\n                </span>\r\n                <br />\r\n                <span className=\"searchPhone\">{practitioner.email}</span>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    // console.log(this.props.location.state.regions);\r\n    return (\r\n      <div>\r\n        <SearchField />\r\n        <Container className=\"searchResultsStyle\">\r\n          <span id=\"searchKeyTerms\">\r\n            Search Result:{\" \"}\r\n            <span>\r\n              {this.state.searchPractitionerName} - {this.state.searchService} -{\" \"}\r\n              {this.state.searchRegion}\r\n            </span>\r\n          </span>\r\n          {searchResultsList}\r\n        </Container>\r\n        <CallToAction />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResults;\r\n"]},"metadata":{},"sourceType":"module"}